'use strict';
function _0x1e6b() {
    const _0x20b8bb = [
        'winston',
        '__esModule',
        'default',
        'prod',
        '__importDe',
        'filename',
        '1ESEQfT',
        '3250962ZyXJez',
        'prettyPrin',
        'value',
        'maxFiles',
        'json',
        '\x20-\x20',
        'env',
        '32468032CqXEvc',
        'debug',
        'colorize',
        'fault',
        '6379891qGKRlZ',
        '1594311ZzGzty',
        'format',
        '980686oIPozH',
        '.logg',
        '2823000zTVICF',
        'timestamp',
        'logger',
        '6518185erlkpB',
        'transports',
        'ptions',
        'level',
        'defineProp',
        'info',
        'File',
        'printf',
        'handleExce',
        './logs/app',
        'Console',
        'createLogg',
        'NODE_ENV',
        'erty',
        'warn',
        'error',
        'errors',
        'combine',
        'stack',
        'maxsize',
        'Http'
    ];
    _0x1e6b = function () {
        return _0x20b8bb;
    };
    return _0x1e6b();
}
const _0x43e675 = _0x1526;
(function (_0xd4c1db, _0x221903) {
    const _0x3d53a4 = _0x1526, _0x517178 = _0xd4c1db();
    while (!![]) {
        try {
            const _0x46e868 = parseInt(_0x3d53a4(0xdf)) / (-0x199e + 0x4b * -0x4f + 0x30c4 * 0x1) * (-parseInt(_0x3d53a4(0xee)) / (0xc35 + -0x9 * -0x37d + -0xe88 * 0x3)) + -parseInt(_0x3d53a4(0xec)) / (-0x118d * -0x2 + -0x2 * -0x11c8 + 0x3 * -0x178d) + -parseInt(_0x3d53a4(0xf0)) / (0x9d + 0x65 * -0x1d + -0x8 * -0x15b) + -parseInt(_0x3d53a4(0xf3)) / (-0xa * 0x379 + 0x3 * 0x162 + 0x1e99) + parseInt(_0x3d53a4(0xe0)) / (0x1 * -0x1b1d + -0x2349 + 0xc7c * 0x5) + -parseInt(_0x3d53a4(0xeb)) / (0x15f6 + -0x34 * 0x9d + 0x9f5 * 0x1) + parseInt(_0x3d53a4(0xe7)) / (0x2f2 + -0x25ba + 0x22d0);
            if (_0x46e868 === _0x221903)
                break;
            else
                _0x517178['push'](_0x517178['shift']());
        } catch (_0x12b926) {
            _0x517178['push'](_0x517178['shift']());
        }
    }
}(_0x1e6b, -0x1 * -0xb4eff + -0x34430 + 0x7c * 0x41e));
var __importDefault = this && this[_0x43e675(0xdd) + _0x43e675(0xea)] || function (_0x2825e2) {
    const _0x39574f = _0x43e675;
    return _0x2825e2 && _0x2825e2[_0x39574f(0xda)] ? _0x2825e2 : { 'default': _0x2825e2 };
};
const _0xb5d93b = {};
_0xb5d93b[_0x43e675(0xe2)] = !![], Object[_0x43e675(0xf7) + _0x43e675(0x100)](exports, _0x43e675(0xda), _0xb5d93b), exports[_0x43e675(0xf2)] = void (-0xb * -0x22 + -0x1240 + 0x10ca);
const winston_1 = __importDefault(require(_0x43e675(0x108))), _0x5d89af = {};
_0x5d89af[_0x43e675(0x105)] = !![];
const jsonLogFileFormat = winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0x104)](winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0x103)](_0x5d89af), winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0xf1)](), winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0xe1) + 't']());
let env = _0x43e675(0xdc);
process[_0x43e675(0xe6)]?.[_0x43e675(0xff)] && (env = process[_0x43e675(0xe6)][_0x43e675(0xff)]);
const level = env === _0x43e675(0xdc) ? _0x43e675(0xf8) : _0x43e675(0xe8), _0x5bed73 = {};
_0x5bed73[_0x43e675(0x105)] = !![];
const _0x4e1bb8 = {};
_0x4e1bb8[_0x43e675(0xde)] = _0x43e675(0xfc) + _0x43e675(0xef), _0x4e1bb8[_0x43e675(0xf6)] = _0x43e675(0x102), _0x4e1bb8[_0x43e675(0xfb) + _0x43e675(0xf5)] = !![], _0x4e1bb8[_0x43e675(0x106)] = 0xa00000, _0x4e1bb8[_0x43e675(0xe3)] = 0xa;
const logger = winston_1[_0x43e675(0xdb)][_0x43e675(0xfe) + 'er']({
    'level': level,
    'format': jsonLogFileFormat,
    'transports': [
        new winston_1[(_0x43e675(0xdb))][(_0x43e675(0xf4))][(_0x43e675(0xfd))]({
            'format': winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0x104)](winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0x103)](_0x5bed73), winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0xe9)](), winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0xfa)](({
                level: _0x2f550e,
                message: _0x195e8d,
                timestamp: _0x21bbf2,
                stack: _0x12970c
            }) => {
                const _0x59fd77 = _0x43e675;
                if (_0x12970c)
                    return _0x2f550e + ':\x20' + _0x21bbf2 + '\x20' + _0x195e8d + _0x59fd77(0xe5) + _0x12970c;
                return _0x2f550e + ':\x20' + _0x21bbf2 + '\x20' + _0x195e8d;
            }))
        }),
        new winston_1[(_0x43e675(0xdb))][(_0x43e675(0xf4))][(_0x43e675(0xf9))](_0x4e1bb8),
        new winston_1[(_0x43e675(0xdb))][(_0x43e675(0xf4))][(_0x43e675(0x107))]({
            'level': _0x43e675(0x101),
            'format': winston_1[_0x43e675(0xdb)][_0x43e675(0xed)][_0x43e675(0xe4)]()
        })
    ]
});
function _0x1526(_0x2df1d8, _0x519d6d) {
    const _0x262c82 = _0x1e6b();
    return _0x1526 = function (_0x43caf8, _0x4cbbc7) {
        _0x43caf8 = _0x43caf8 - (-0x160c + -0x1130 + 0x2816);
        let _0x5a3633 = _0x262c82[_0x43caf8];
        return _0x5a3633;
    }, _0x1526(_0x2df1d8, _0x519d6d);
}
exports[_0x43e675(0xf2)] = logger;