'use strict';
const _0x31047e = _0x3fba;
(function (_0x351be3, _0x1a6464) {
    const _0x1ee8d4 = _0x3fba, _0x172fa4 = _0x351be3();
    while (!![]) {
        try {
            const _0x1c82eb = parseInt(_0x1ee8d4(0x1f7)) / (0x203b * 0x1 + -0x1e58 * -0x1 + -0x3e92) + -parseInt(_0x1ee8d4(0x1fd)) / (0x3 * 0x773 + -0x1 * -0x4df + -0xa2 * 0x2b) + parseInt(_0x1ee8d4(0x1eb)) / (0x1a61 + 0x1596 + -0x84 * 0x5d) + -parseInt(_0x1ee8d4(0x1e6)) / (0x24ab * 0x1 + 0x4 * -0x24b + -0x1b7b) * (-parseInt(_0x1ee8d4(0x1f0)) / (0x16e2 + 0x6e * 0x21 + -0x250b)) + -parseInt(_0x1ee8d4(0x1e8)) / (-0x5 * 0x435 + -0xde0 + 0x22ef) * (-parseInt(_0x1ee8d4(0x1e7)) / (-0x10dd + -0xe75 + 0x1f59)) + -parseInt(_0x1ee8d4(0x1ea)) / (0x3 * 0x18d + -0x1a1e + 0x157f) * (-parseInt(_0x1ee8d4(0x1e9)) / (0xe04 + -0xb90 + 0x1 * -0x26b)) + parseInt(_0x1ee8d4(0x1ff)) / (-0x12c2 + 0x1d61 + -0x387 * 0x3) * (-parseInt(_0x1ee8d4(0x1f3)) / (-0x2cb * 0x5 + 0x25b1 + -0x17af));
            if (_0x1c82eb === _0x1a6464)
                break;
            else
                _0x172fa4['push'](_0x172fa4['shift']());
        } catch (_0x1be484) {
            _0x172fa4['push'](_0x172fa4['shift']());
        }
    }
}(_0x1ec6, 0x1172af + -0x6301a + -0x531 * 0x67));
function _0x1ec6() {
    const _0x2fc14b = [
        'value',
        'erty',
        'AppError',
        'defineProp',
        'open',
        '__importDe',
        '436ofxNsl',
        '7WyoxZd',
        '1469856UUCcCs',
        '9JqHzpm',
        '192456SQTaZb',
        '3082233UCPcVi',
        '../models/',
        'okKNR',
        'sequelize',
        'default',
        '7495MBMatY',
        '../errors/',
        'where',
        '297TihAKq',
        '__esModule',
        'QIHXl',
        'pending',
        '169585LIUlFX',
        'findOne',
        'stringify',
        'contactId',
        'Ticket',
        'status',
        '579454LbnqGD',
        'fault',
        '273570LaWpGm'
    ];
    _0x1ec6 = function () {
        return _0x2fc14b;
    };
    return _0x1ec6();
}
var __importDefault = this && this[_0x31047e(0x1e5) + _0x31047e(0x1fe)] || function (_0x11dd3a) {
    const _0x593d68 = _0x31047e;
    return _0x11dd3a && _0x11dd3a[_0x593d68(0x1f4)] ? _0x11dd3a : { 'default': _0x11dd3a };
};
function _0x3fba(_0xd2d0b2, _0x1bc598) {
    const _0x551d09 = _0x1ec6();
    return _0x3fba = function (_0x17b9d4, _0x28094d) {
        _0x17b9d4 = _0x17b9d4 - (0x2662 + -0x14 * 0x17e + -0x9b * 0xb);
        let _0x430548 = _0x551d09[_0x17b9d4];
        return _0x430548;
    }, _0x3fba(_0xd2d0b2, _0x1bc598);
}
const _0x106a36 = {};
_0x106a36[_0x31047e(0x200)] = !![], Object[_0x31047e(0x1e3) + _0x31047e(0x1e1)](exports, _0x31047e(0x1f4), _0x106a36);
const sequelize_1 = require(_0x31047e(0x1ee)), AppError_1 = __importDefault(require(_0x31047e(0x1f1) + _0x31047e(0x1e2))), Ticket_1 = __importDefault(require(_0x31047e(0x1ec) + _0x31047e(0x1fb))), CheckContactOpenTickets = async _0x3b71cb => {
        const _0x207aff = _0x31047e, _0x15152a = {};
        _0x15152a[_0x207aff(0x1ed)] = _0x207aff(0x1e4), _0x15152a[_0x207aff(0x1f5)] = _0x207aff(0x1f6);
        const _0x4617f1 = _0x15152a, _0x4b674d = {
                [sequelize_1['Op']['or']]: [
                    _0x4617f1[_0x207aff(0x1ed)],
                    _0x4617f1[_0x207aff(0x1f5)]
                ]
            }, _0x16068c = {};
        _0x16068c[_0x207aff(0x1fa)] = _0x3b71cb, _0x16068c[_0x207aff(0x1fc)] = _0x4b674d;
        const _0x3a4999 = {};
        _0x3a4999[_0x207aff(0x1f2)] = _0x16068c;
        const _0x2cf939 = await Ticket_1[_0x207aff(0x1ef)][_0x207aff(0x1f8)](_0x3a4999);
        if (_0x2cf939)
            throw new AppError_1[(_0x207aff(0x1ef))](JSON[_0x207aff(0x1f9)](_0x2cf939), -0x1 * 0x24c5 + -0x120d * 0x1 + 0xb * 0x521);
    };
exports[_0x31047e(0x1ef)] = CheckContactOpenTickets;