'use strict';
function _0x294e(_0x317deb, _0x35d71c) {
    const _0x455683 = _0x5454();
    return _0x294e = function (_0x404bd1, _0x3a8053) {
        _0x404bd1 = _0x404bd1 - (-0x5 * -0x495 + 0x21f1 + 0x5 * -0xb47);
        let _0x447fbb = _0x455683[_0x404bd1];
        return _0x447fbb;
    }, _0x294e(_0x317deb, _0x35d71c);
}
const _0xe17745 = _0x294e;
(function (_0x3390bc, _0x485007) {
    const _0x320c8c = _0x294e, _0x2c05a4 = _0x3390bc();
    while (!![]) {
        try {
            const _0x1e58c5 = -parseInt(_0x320c8c(0x7e)) / (0x4 * 0x2dd + 0xc * -0x329 + 0x1b * 0xfb) + -parseInt(_0x320c8c(0x89)) / (-0x1 * 0x10f5 + -0x144b + -0xfb * -0x26) * (parseInt(_0x320c8c(0xa4)) / (0x4 * -0x67 + 0x53e + 0x135 * -0x3)) + parseInt(_0x320c8c(0x7f)) / (0xa1f * -0x2 + 0x173b * 0x1 + -0x1 * 0x2f9) + -parseInt(_0x320c8c(0xa6)) / (0x12 * 0x108 + 0x2ed * -0x7 + 0x1 * 0x1f0) + parseInt(_0x320c8c(0x82)) / (0x533 + -0x2134 + 0x1c07) * (parseInt(_0x320c8c(0x88)) / (-0x4a * -0x3a + -0x1bf * -0x1 + -0x127c)) + -parseInt(_0x320c8c(0x80)) / (-0xd * -0x2c7 + -0x6 * -0x5f3 + -0x47c5) * (-parseInt(_0x320c8c(0x9d)) / (0x891 * 0x4 + -0x253e + 0x303)) + -parseInt(_0x320c8c(0x86)) / (-0x23b1 + -0x17d1 + -0x94 * -0x67) * (parseInt(_0x320c8c(0x93)) / (0x1e14 + 0xcc0 + 0x2ac9 * -0x1));
            if (_0x1e58c5 === _0x485007)
                break;
            else
                _0x2c05a4['push'](_0x2c05a4['shift']());
        } catch (_0x4387b8) {
            _0x2c05a4['push'](_0x2c05a4['shift']());
        }
    }
}(_0x5454, 0x32c47 + -0x52bd8 + 0x6cd3b));
var __importDefault = this && this[_0xe17745(0x84) + _0xe17745(0x7c)] || function (_0x573bc4) {
    const _0x47db0f = _0xe17745;
    return _0x573bc4 && _0x573bc4[_0x47db0f(0x92)] ? _0x573bc4 : { 'default': _0x573bc4 };
};
const _0x41029a = {};
_0x41029a[_0xe17745(0xa7)] = !![], Object[_0xe17745(0x8f) + _0xe17745(0x9c)](exports, _0xe17745(0x92), _0x41029a);
const FindUpdateTicketsInactiveChatBot_1 = __importDefault(require(_0xe17745(0x7d) + _0xe17745(0x97) + _0xe17745(0xa5) + _0xe17745(0x7b) + _0xe17745(0xa3) + _0xe17745(0x8b))), logger_1 = require(_0xe17745(0x96) + _0xe17745(0x9a)), _0x100987 = {};
_0x100987[_0xe17745(0x98)] = (-0x1 * -0xb4d + 0x100a + -0x1b52) * (-0xc65 * 0x3 + -0x76e + 0x3 * 0xef3) * (0x21af + 0x1 * -0x1271 + -0x2 * 0x5ab);
const _0x1d0aa1 = {};
function _0x5454() {
    const _0x4752f6 = [
        'etsChatBot',
        'erty',
        '9gfwMVH',
        'RwisR',
        'removeOnCo',
        'default',
        'ctiveChatB',
        'removeOnFa',
        'ketsInacti',
        '3gibqjN',
        'rvices/Fin',
        '1737760oRkdwK',
        'value',
        'repeat',
        'jobId',
        'ot\x20Initiat',
        '\x20messages',
        'dUpdateTic',
        'fault',
        '../service',
        '15626WLzYyI',
        '2079760GSKgoN',
        '3499256DUokVN',
        'fpupu',
        '1164VfFVUe',
        'error',
        '__importDe',
        'logger',
        '3250660sSBdTj',
        'mplete',
        '18970rxtZXm',
        '960098cvhYLd',
        'info',
        'veChatBot',
        'Finalized\x20',
        'Error\x20send',
        'Inactives',
        'defineProp',
        'FindUpdate',
        'bNqps',
        '__esModule',
        '11SmdVJn',
        'TicketsIna',
        'VerifyTick',
        '../utils/l',
        's/TicketSe',
        'every',
        'message',
        'ogger'
    ];
    _0x5454 = function () {
        return _0x4752f6;
    };
    return _0x5454();
}
_0x1d0aa1[_0xe17745(0x9f) + _0xe17745(0x87)] = ![], _0x1d0aa1[_0xe17745(0xa2) + 'il'] = ![], _0x1d0aa1[_0xe17745(0x78)] = _0xe17745(0x95) + _0xe17745(0x9b) + _0xe17745(0x8e), _0x1d0aa1[_0xe17745(0x77)] = _0x100987, exports[_0xe17745(0xa0)] = {
    'key': _0xe17745(0x95) + _0xe17745(0x9b) + _0xe17745(0x8e),
    'options': _0x1d0aa1,
    async 'handle'() {
        const _0x39e19e = _0xe17745, _0x3873e4 = {};
        _0x3873e4[_0x39e19e(0x81)] = _0x39e19e(0x90) + _0x39e19e(0x94) + _0x39e19e(0xa1) + _0x39e19e(0x79) + 'ed', _0x3873e4[_0x39e19e(0x91)] = _0x39e19e(0x8c) + _0x39e19e(0x90) + _0x39e19e(0x94) + _0x39e19e(0xa1) + 'ot', _0x3873e4[_0x39e19e(0x9e)] = _0x39e19e(0x8d) + _0x39e19e(0x7a);
        const _0x143ea8 = _0x3873e4;
        try {
            logger_1[_0x39e19e(0x85)][_0x39e19e(0x8a)](_0x143ea8[_0x39e19e(0x81)]), await (0x1 * -0x24cf + 0x13c * 0x9 + -0x2b * -0x99, FindUpdateTicketsInactiveChatBot_1[_0x39e19e(0xa0)])(), logger_1[_0x39e19e(0x85)][_0x39e19e(0x8a)](_0x143ea8[_0x39e19e(0x91)]);
        } catch (_0x22437c) {
            const _0x3f282c = {};
            _0x3f282c[_0x39e19e(0x99)] = _0x143ea8[_0x39e19e(0x9e)], _0x3f282c[_0x39e19e(0x83)] = _0x22437c, logger_1[_0x39e19e(0x85)][_0x39e19e(0x83)](_0x3f282c);
            throw new Error(_0x22437c);
        }
    }
};