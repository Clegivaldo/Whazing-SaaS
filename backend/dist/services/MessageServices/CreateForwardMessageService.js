'use strict';
const _0x554092 = _0x1f26;
(function (_0x52762c, _0x295d71) {
    const _0x32e843 = _0x1f26, _0x5dc2b9 = _0x52762c();
    while (!![]) {
        try {
            const _0x525f9e = parseInt(_0x32e843(0x189)) / (0x1662 + 0x370 + -0x1 * 0x19d1) + parseInt(_0x32e843(0x17f)) / (0x223 * 0xb + -0x226c + -0x1 * -0xaed) + -parseInt(_0x32e843(0x168)) / (0xa1f * 0x1 + -0x1 * -0x1089 + 0x1aa5 * -0x1) + parseInt(_0x32e843(0x17a)) / (-0x991 * -0x1 + 0x1 * 0x2089 + -0x1 * 0x2a16) * (parseInt(_0x32e843(0x15a)) / (-0xffa + -0x2d + 0x102c)) + parseInt(_0x32e843(0x15c)) / (-0x1323 + 0x25ca + 0xfb * -0x13) * (-parseInt(_0x32e843(0x175)) / (-0x1 * -0x1732 + -0x25f6 + 0xecb * 0x1)) + parseInt(_0x32e843(0x197)) / (-0xd * -0x115 + 0x632 + -0x1 * 0x143b) * (-parseInt(_0x32e843(0x17c)) / (-0x65 * 0x59 + 0x245b + -0x135)) + parseInt(_0x32e843(0x188)) / (-0x2075 + -0x1 * 0x119b + -0x35 * -0xf2) * (parseInt(_0x32e843(0x184)) / (-0x9d5 + 0x10ce + -0x6ee));
            if (_0x525f9e === _0x295d71)
                break;
            else
                _0x5dc2b9['push'](_0x5dc2b9['shift']());
        } catch (_0x42f87d) {
            _0x5dc2b9['push'](_0x5dc2b9['shift']());
        }
    }
}(_0x1663, 0x1 * -0x9cb27 + 0x9f * 0x445 + 0x86 * 0x188a));
var __importDefault = this && this[_0x554092(0x17b) + _0x554092(0x195)] || function (_0x4de820) {
    const _0x342d1a = _0x554092;
    return _0x4de820 && _0x4de820[_0x342d1a(0x166)] ? _0x4de820 : { 'default': _0x4de820 };
};
const _0x13f662 = {};
_0x13f662[_0x554092(0x167)] = !![], Object[_0x554092(0x16b) + _0x554092(0x196)](exports, _0x554092(0x166), _0x13f662);
function _0x1f26(_0x5b2669, _0x2ab2c9) {
    const _0x3601e1 = _0x1663();
    return _0x1f26 = function (_0x1434c1, _0x28ecbb) {
        _0x1434c1 = _0x1434c1 - (0x1d95 + 0x20de + -0x1 * 0x3d1e);
        let _0x1ec1c0 = _0x3601e1[_0x1434c1];
        return _0x1ec1c0;
    }, _0x1f26(_0x5b2669, _0x2ab2c9);
}
function _0x1663() {
    const _0x49514b = [
        'contactId',
        '33EAGgOb',
        'idation',
        'mediaName',
        'SPgYB',
        '2831390UIrEdE',
        '208502kdePmD',
        'ls/Ticket',
        'include',
        'NG_MESSAGE',
        'findByPk',
        'cCiGX',
        's/queueVal',
        'quotedMsg',
        'body',
        'type',
        'isGroup',
        'chat:creat',
        'fault',
        'erty',
        '2452848gdfXIs',
        'mediaType',
        'contact',
        'Emit',
        'ervices/Sh',
        'chat',
        'ERR_CREATI',
        '10540rOOEvM',
        'sequelize',
        '70914lFvOsK',
        'status',
        'payload',
        'model',
        '../../help',
        'owTicketSe',
        'brbEj',
        'getTime',
        'rvice',
        'update',
        '__esModule',
        'value',
        '2100219IIRgeq',
        'ers/socket',
        'findOne',
        'defineProp',
        'rdKdg',
        'ticket',
        'create',
        'tenantId',
        'miMpy',
        'mKXHz',
        'ls/Message',
        'pending',
        'default',
        '364ZeajZN',
        'tIlaF',
        '_SYSTEM',
        '../../util',
        'open',
        '824PZEfTD',
        '__importDe',
        '9KeCCAM',
        'whatsappId',
        'where',
        '1005688agygHh',
        'HgAkr',
        '../../mode',
        '../TicketS'
    ];
    _0x1663 = function () {
        return _0x49514b;
    };
    return _0x1663();
}
const sequelize_1 = require(_0x554092(0x15b)), socketEmit_1 = __importDefault(require(_0x554092(0x160) + _0x554092(0x169) + _0x554092(0x156))), Message_1 = __importDefault(require(_0x554092(0x181) + _0x554092(0x172))), Ticket_1 = __importDefault(require(_0x554092(0x181) + _0x554092(0x18a))), ShowTicketService_1 = __importDefault(require(_0x554092(0x182) + _0x554092(0x157) + _0x554092(0x161) + _0x554092(0x164))), queueValidation_1 = __importDefault(require(_0x554092(0x178) + _0x554092(0x18f) + _0x554092(0x185))), CreateForwardMessageService = async ({
        userId: _0x16167e,
        tenantId: _0x1914d3,
        message: _0x1cd259,
        contact: _0x488b85,
        ticketIdOrigin: _0x1ac064
    }) => {
        const _0x221eb7 = _0x554092, _0x3b5949 = {};
        _0x3b5949[_0x221eb7(0x171)] = _0x221eb7(0x179), _0x3b5949[_0x221eb7(0x187)] = _0x221eb7(0x173), _0x3b5949[_0x221eb7(0x18e)] = _0x221eb7(0x158), _0x3b5949[_0x221eb7(0x176)] = _0x221eb7(0x16d), _0x3b5949[_0x221eb7(0x180)] = _0x221eb7(0x155), _0x3b5949[_0x221eb7(0x16c)] = _0x221eb7(0x190), _0x3b5949[_0x221eb7(0x170)] = _0x221eb7(0x159) + _0x221eb7(0x18c) + _0x221eb7(0x177), _0x3b5949[_0x221eb7(0x162)] = _0x221eb7(0x194) + 'e';
        const _0x499c4a = _0x3b5949, _0x43d9fd = {};
        _0x43d9fd['id'] = _0x1ac064, _0x43d9fd[_0x221eb7(0x16f)] = _0x1914d3;
        const _0x27c413 = await (-0x176 + 0x17ee + -0xb3c * 0x2, ShowTicketService_1[_0x221eb7(0x174)])(_0x43d9fd);
        let _0x36febd;
        const _0x5522c3 = {
                [sequelize_1['Op']['or']]: [
                    _0x499c4a[_0x221eb7(0x171)],
                    _0x499c4a[_0x221eb7(0x187)]
                ]
            }, _0x44795c = {};
        _0x44795c[_0x221eb7(0x15d)] = _0x5522c3, _0x44795c[_0x221eb7(0x16f)] = _0x1914d3, _0x44795c[_0x221eb7(0x183)] = _0x488b85['id'];
        const _0x397ac8 = {};
        _0x397ac8[_0x221eb7(0x17e)] = _0x44795c, _0x36febd = await Ticket_1[_0x221eb7(0x174)][_0x221eb7(0x16a)](_0x397ac8);
        !_0x36febd && (_0x36febd = await Ticket_1[_0x221eb7(0x174)][_0x221eb7(0x16e)]({
            'contactId': _0x488b85['id'],
            'status': _0x499c4a[_0x221eb7(0x171)],
            'isGroup': _0x488b85[_0x221eb7(0x193)],
            'userId': _0x16167e,
            'tenantId': _0x1914d3,
            'unreadMessages': 0x0,
            'whatsappId': _0x27c413[_0x221eb7(0x17d)],
            'lastMessage': _0x1cd259[_0x221eb7(0x191)],
            'lastMessageAt': new Date()[_0x221eb7(0x163)](),
            'answered': !![]
        }));
        const _0x1def15 = {
                'body': _0x1cd259[_0x221eb7(0x191)],
                'contactId': _0x488b85['id'],
                'fromMe': !![],
                'read': !![],
                'mediaType': _0x1cd259?.[_0x221eb7(0x198)],
                'mediaUrl': _0x1cd259?.[_0x221eb7(0x186)],
                'mediaName': _0x1cd259?.[_0x221eb7(0x186)],
                'timestamp': new Date()[_0x221eb7(0x163)](),
                'userId': _0x16167e,
                'scheduleDate': null,
                'sendType': _0x499c4a[_0x221eb7(0x18e)],
                'status': _0x499c4a[_0x221eb7(0x187)],
                'ticketId': _0x36febd['id'],
                'tenantId': _0x1914d3
            }, _0x2d4d59 = await Message_1[_0x221eb7(0x174)][_0x221eb7(0x16e)](_0x1def15), _0x157d67 = {};
        _0x157d67[_0x221eb7(0x16f)] = _0x1914d3;
        const _0x5273ba = {};
        _0x5273ba[_0x221eb7(0x15f)] = Ticket_1[_0x221eb7(0x174)], _0x5273ba['as'] = _0x499c4a[_0x221eb7(0x176)], _0x5273ba[_0x221eb7(0x17e)] = _0x157d67, _0x5273ba[_0x221eb7(0x18b)] = [_0x499c4a[_0x221eb7(0x180)]];
        const _0x3f4b89 = await Message_1[_0x221eb7(0x174)][_0x221eb7(0x18d)](_0x2d4d59['id'], {
            'include': [
                _0x5273ba,
                {
                    'model': Message_1[_0x221eb7(0x174)],
                    'as': _0x499c4a[_0x221eb7(0x16c)],
                    'include': [_0x499c4a[_0x221eb7(0x180)]]
                }
            ]
        });
        if (!_0x3f4b89)
            throw new Error(_0x499c4a[_0x221eb7(0x170)]);
        await _0x36febd[_0x221eb7(0x165)]({
            'lastMessage': _0x3f4b89[_0x221eb7(0x191)],
            'lastMessageAt': new Date()[_0x221eb7(0x163)](),
            'answered': !![]
        }), await (-0x22e2 + 0xca6 + 0x58f * 0x4, queueValidation_1[_0x221eb7(0x174)])(_0x36febd[_0x221eb7(0x17d)], _0x36febd[_0x221eb7(0x16f)], [_0x3f4b89]);
        const _0x195086 = {};
        _0x195086[_0x221eb7(0x16f)] = _0x1914d3, _0x195086[_0x221eb7(0x192)] = _0x499c4a[_0x221eb7(0x162)], _0x195086[_0x221eb7(0x15e)] = _0x3f4b89, (0x2704 + -0x1 * -0xad2 + 0x18eb * -0x2, socketEmit_1[_0x221eb7(0x174)])(_0x195086);
    };
exports[_0x554092(0x174)] = CreateForwardMessageService;