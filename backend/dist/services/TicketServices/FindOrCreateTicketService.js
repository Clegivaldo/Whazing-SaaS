'use strict';function b(c,d){const e=a();return b=function(f,g){f=f-0x6c;let h=e[f];return h;},b(c,d);}const C=b,E=b;function a(){const H=['getBodyMessage','tags','../../helpers/CheckChatBotFlowWelcome','__importDefault','9817749EiJbSo','findOne','getWallets','174680NPprpn','PngiI','704880hFlWqD','closed','3824286kyrjrq','name','messenger','__esModule','default','create','body','328405yYvAnS','setDataValue','instagram','getTime','user','defineProperty','../../models/User','isCreated','sequelize','extraInfo','kjxyl','VTTyF','value','key','isDeleted','contact','../../models/Contact','2evxAsU','startedAttendanceAt','754047awQLkR','telegram','update','fromMe','OhqCn','cNddl','32KaRgvy','isFarewellMessage','../SettingServices/ListSettingsService','enabled','open','pending','waba','../../models/Ticket','UcguH','DESC','updatedAt','GEPzx','../../models/CampaignContacts','./ShowTicketService','status','whatsapp','hLHvx','789099nqtZNk','ticket','unreadMessages','wallets','userId'];a=function(){return H;};return a();}(function(c,d){const A=b,B=b,e=c();while(!![]){try{const f=-parseInt(A(0x6f))/0x1+parseInt(A(0x8b))/0x2*(-parseInt(B(0xa4))/0x3)+-parseInt(B(0x71))/0x4+parseInt(B(0x7a))/0x5+-parseInt(A(0x73))/0x6+-parseInt(B(0x8d))/0x7*(-parseInt(B(0x93))/0x8)+parseInt(A(0x6c))/0x9;if(f===d)break;else e['push'](e['shift']());}catch(g){e['push'](e['shift']());}}}(a,0x520f0));var __importDefault=this&&this[C(0xac)]||function(c){const D=C;return c&&c[D(0x76)]?c:{'default':c};};Object[C(0x7f)](exports,C(0x76),{'value':!![]});const sequelize_1=require(C(0x82)),Contact_1=__importDefault(require(E(0x8a))),Ticket_1=__importDefault(require(E(0x9a))),User_1=__importDefault(require(E(0x80))),ShowTicketService_1=__importDefault(require(E(0xa0))),CampaignContacts_1=__importDefault(require(C(0x9f))),socketEmit_1=__importDefault(require('../../helpers/socketEmit')),CheckChatBotFlowWelcome_1=__importDefault(require(E(0xab))),CreateLogTicketService_1=__importDefault(require('./CreateLogTicketService')),Message_1=__importDefault(require('../../models/Message')),ListSettingsService_1=__importDefault(require(E(0x95))),VerifyContactBaileys_1=require('../WbotServices/helpers/VerifyContactBaileys'),FindOrCreateTicketService=async({contact:c,whatsappId:d,unreadMessages:e,tenantId:f,groupContact:g,msg:h,isSync:i,channel:j})=>{const F=C,G=C;let k;j===F(0x7c)?k=h[G(0x90)]:F(0x91)!==F(0x9e)?k=h['key'][G(0x90)]:e=f[F(0x87)][G(0x90)];if(j===F(0xa2)&&h&&k){const q=await CampaignContacts_1['default'][G(0x6d)]({'where':{'contactId':c['id'],'messageId':h[G(0x87)]?.['id']}});if(q?.['id'])return G(0x84)!==F(0x70)?{'isCampaignMessage':!![]}:{'isCampaignMessage':!![]};}if(h&&h[G(0x90)]){const s=await Message_1[G(0x77)]['findOne']({'where':{'messageId':h['key']?.['id']},'include':[F(0xa5)]});if(s?.[G(0xa5)]?.['status']===G(0x72)&&s?.['ticket']['lastMessage']===h[F(0x79)]){const t=s['ticket'];return t[G(0x94)]=!![],t;}}let l=await Ticket_1[F(0x77)][G(0x6d)]({'where':{'status':{[sequelize_1['Op']['or']]:[G(0x97),F(0x98)]},'tenantId':f,'whatsappId':d,'contactId':g?g['id']:c['id']},'include':[{'model':Contact_1[F(0x77)],'as':G(0x89),'include':[G(0x83),'tags',{'association':'wallets','attributes':['id',F(0x74)]}]},{'model':User_1[F(0x77)],'as':G(0x7e),'attributes':['id',F(0x74)]},{'association':F(0xa2),'attributes':['id','name','isDeleted']}]});if(l){if('cNddl'===F(0x92))return e=[F(0x8e),F(0x99),F(0x7c),G(0x75)]['includes'](j)&&e>0x0?e+=l[G(0xa6)]:e,await l['update']({'unreadMessages':e}),(0x0,socketEmit_1[G(0x77)])({'tenantId':f,'type':'ticket:update','payload':l}),l;else e=f[F(0x90)];}if(g){l=await Ticket_1[G(0x77)]['findOne']({'where':{'contactId':g['id'],'tenantId':f,'whatsappId':d},'order':[[G(0x9d),'DESC']],'include':[{'model':Contact_1[G(0x77)],'as':F(0x89),'include':[G(0x83),G(0xaa),{'association':G(0xa7),'attributes':['id',G(0x74)]}]},{'model':User_1[F(0x77)],'as':F(0x7e),'attributes':['id',F(0x74)]},{'association':'whatsapp','attributes':['id',F(0x74),G(0x88)]}]});if(l){if(G(0x85)===F(0x85))return await l[G(0x8f)]({'status':F(0x98),'userId':null,'unreadMessages':e}),(0x0,socketEmit_1[G(0x77)])({'tenantId':f,'type':'ticket:update','payload':l}),l;else{const w=d[G(0xa5)];return w[F(0x94)]=!![],w;}}}else{if('FWRhi'!==F(0xa3)){l=await Ticket_1['default'][F(0x6d)]({'where':{'status':{[sequelize_1['Op']['in']]:[F(0x97),F(0x98)]},'tenantId':f,'whatsappId':d,'contactId':c['id']},'order':[['updatedAt',G(0x9c)]],'include':[{'model':Contact_1['default'],'as':'contact','include':[F(0x83),G(0xaa),{'association':F(0xa7),'attributes':['id',G(0x74)]}]},{'model':User_1[G(0x77)],'as':'user','attributes':['id',G(0x74)]},{'association':G(0xa2),'attributes':['id',F(0x74),G(0x88)]}]});if(l){if(G(0x9b)!==F(0x9b))h[G(0xa1)]=F(0x97),i[F(0xa8)]=j[0x0]['id'],k[G(0x8c)]=new l()[G(0x7d)]();else return await l['update']({'status':G(0x98),'userId':null,'unreadMessages':e}),(0x0,socketEmit_1[G(0x77)])({'tenantId':f,'type':'ticket:update','payload':l}),l;}}else return g&&h[F(0x76)]?i:{'default':j};}const m=(await(0x0,ListSettingsService_1[G(0x77)])(f))?.['find'](y=>y['key']==='DirectTicketsToWallets')?.[G(0x86)]===G(0x96)||![],n={'contactId':g?g['id']:c['id'],'status':F(0x98),'isGroup':!!g,'unreadMessages':e,'whatsappId':d,'tenantId':f,'channel':j};if(m&&c['id']){const y=c,z=await y[G(0x6e)]();z&&z[0x0]?.['id']&&(n[G(0xa1)]=F(0x97),n['userId']=z[0x0]['id'],n[G(0x8c)]=new Date()['getTime']());}h&&(n['lastMessage']=await(0x0,VerifyContactBaileys_1[F(0xa9)])(h));const o=await Ticket_1['default'][G(0x78)](n);return await(0x0,CreateLogTicketService_1[G(0x77)])({'ticketId':o['id'],'type':F(0x78)}),(h&&!k||!o[F(0xa8)]||i)&&await(0x0,CheckChatBotFlowWelcome_1['default'])(o),l=await(0x0,ShowTicketService_1[G(0x77)])({'id':o['id'],'tenantId':f}),l[F(0x7b)](G(0x81),!![]),(0x0,socketEmit_1[F(0x77)])({'tenantId':f,'type':'ticket:update','payload':l}),l;};exports['default']=FindOrCreateTicketService;