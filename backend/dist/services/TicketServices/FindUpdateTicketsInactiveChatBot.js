'use strict';
const _0x146ad8 = _0x32ca;
(function (_0x3abb9d, _0x4b029b) {
    const _0x438992 = _0x32ca, _0x21d9f9 = _0x3abb9d();
    while (!![]) {
        try {
            const _0x555795 = parseInt(_0x438992(0xe4)) / (0x9 * 0x3e + 0x9 * 0x16 + -0x2f3 * 0x1) * (-parseInt(_0x438992(0xcc)) / (-0x1ad2 * -0x1 + 0x1c40 * -0x1 + 0x170)) + parseInt(_0x438992(0x8a)) / (0xa0f * -0x2 + 0x4ff * -0x4 + 0x281d) * (parseInt(_0x438992(0xd5)) / (0xa00 + -0x113c * -0x2 + -0x4 * 0xb1d)) + -parseInt(_0x438992(0x86)) / (0x1dd * 0x4 + 0x2142 + -0x28b1) * (-parseInt(_0x438992(0xa4)) / (-0x1 * 0x1eaf + -0x1a * 0x164 + 0x42dd)) + parseInt(_0x438992(0xbe)) / (0xd69 + -0x18a7 * -0x1 + -0xd * 0x2ed) + -parseInt(_0x438992(0x8f)) / (0x981 + -0x3c * 0xa0 + 0x1c07) + parseInt(_0x438992(0xba)) / (-0xf52 + -0x2305 + 0x64c * 0x8) * (parseInt(_0x438992(0x7d)) / (0x6c9 + 0x256e + -0x2c2d)) + -parseInt(_0x438992(0xc1)) / (0x256 * -0x8 + -0xb * 0x235 + 0x2b02);
            if (_0x555795 === _0x4b029b)
                break;
            else
                _0x21d9f9['push'](_0x21d9f9['shift']());
        } catch (_0x37ee0f) {
            _0x21d9f9['push'](_0x21d9f9['shift']());
        }
    }
}(_0x2203, 0x3c1b9 * -0x5 + 0x7d57b * -0x2 + 0x2e0eb4));
var __importDefault = this && this[_0x146ad8(0xe2) + _0x146ad8(0xf6)] || function (_0x2319f3) {
    const _0x55d873 = _0x146ad8;
    return _0x2319f3 && _0x2319f3[_0x55d873(0x95)] ? _0x2319f3 : { 'default': _0x2319f3 };
};
function _0x2203() {
    const _0x53638d = [
        'rations\x27->',
        't\x20=\x20s.valu',
        'RENT_TIMES',
        '\x20and\x20t.\x22us',
        't\x0a\x20\x20\x20\x20t.id',
        'wId\x22\x0a\x20\x20\x20\x20i',
        'igurations',
        '.status,\x0a\x20',
        'tId\x22\x20and\x20s',
        'fault',
        '\x22Settings\x22',
        'update',
        'Emit',
        '\x20cf.\x22tenan',
        'fig->\x27conf',
        '\x27\x20MINUTES\x27',
        '\x0a\x20\x20\x20\x20selec',
        '170OGTTQf',
        'otResponse',
        '\x27configura',
        'erId\x22\x20is\x20n',
        'defineProp',
        'd\x20t.\x22lastI',
        'Message\x27->',
        'n,\x0a\x20\x20\x20\x20con',
        'botTicketA',
        '4729690UBHmyR',
        '\x27type\x27\x20as\x20',
        ',\x0a\x20\x20\x20\x20--t.',
        'map',
        '6267fLhfdW',
        'ype\x27\x20=\x20\x27co',
        'destiny',
        'n\x20\x22ChatFlo',
        '\x20t.\x22chatFl',
        '1830584qkLYVh',
        '\x0a\x20\x20\x20\x20and\x20c',
        'mqOar',
        'onfig->>\x27t',
        'query',
        '\x20\x20config->',
        '__esModule',
        'e\x0a\x20\x20\x20\x20and\x20',
        '\x27->\x27notRes',
        '\x20as\x20config',
        '.\x22tenantId',
        'ge\x27->\x27dest',
        'cf.flow->\x27',
        'value',
        'all',
        'iny\x27\x20as\x20de',
        'tenantId',
        '\x20cross\x20joi',
        'TAMP\x20-\x20con',
        'ponseMessa',
        'l\x20as\x20time_',
        '6nMEKfF',
        'ets\x22\x20t\x0a\x20\x20\x20',
        '\x20s\x20on\x20s.\x22t',
        'ticket:upd',
        '.\x22lastInte',
        'stiny\x0a\x20\x20\x20\x20',
        ')::interva',
        'Bot\x22\x20<\x20CUR',
        'QueryTypes',
        '../../help',
        'ers/socket',
        'from\x20\x22Tick',
        '\x22\x20=\x20cf.\x22te',
        '\x22,\x0a\x20\x20\x20\x20--t',
        'n\x20lateral\x20',
        'findByPk',
        'TmeaO',
        '\x20inner\x20joi',
        'ull)\x0a\x20\x20',
        'json_array',
        'ctive\x27\x0a\x20\x20\x20',
        'owId\x22::tex',
        '462591AUkiOX',
        'ls/Ticket',
        'l\x0a\x20\x20\x20\x20and\x20',
        '_elements(',
        '7329441MwbFMv',
        'd\x22\x20is\x20null',
        'g->\x27config',
        '13322177AXsNJG',
        '->\x27configu',
        'SELECT',
        'ate',
        'enantId\x22\x20=',
        '(t.\x22queueI',
        'queueId',
        '../../mode',
        'w\x22\x20cf\x20on\x20t',
        '.\x22key\x22\x20=\x20\x27',
        'type_actio',
        '129220BYVVBq',
        'ns\x27\x0a\x20\x20\x20\x20an',
        'urations\x27,',
        'seMessage\x27',
        'nfiguratio',
        'default',
        'cat(config',
        '\x20\x27pending\x27',
        'type',
        '580hDCcNB',
        '\x27notRespon',
        'sequelize',
        'erty',
        't.\x22chatFlo',
        '\x22contactId',
        'nantId\x22\x20an',
        'OmzUN',
        '->\x27time\x27,\x20',
        '\x20\x20\x20--confi',
        'nteraction',
        '\x0a\x20\x20\x20\x20where',
        'tions\x27->\x27n',
        '__importDe',
        '\x0a\x20\x20\x20\x20--con',
        '15mFBsdq',
        't.status\x20=',
        'userId',
        'nodeList\x27)',
        'd\x20cf.id\x20=\x20',
        'ractionBot',
        'nner\x20join\x20',
        'action,\x0a\x20\x20',
        'payload'
    ];
    _0x2203 = function () {
        return _0x53638d;
    };
    return _0x2203();
}
const _0xa02eff = {};
function _0x32ca(_0x420354, _0x9b9012) {
    const _0x1c3971 = _0x2203();
    return _0x32ca = function (_0x4c1cb3, _0x4f3784) {
        _0x4c1cb3 = _0x4c1cb3 - (-0x77d + -0x1 * -0x262d + -0x3 * 0xa11);
        let _0x514312 = _0x1c3971[_0x4c1cb3];
        return _0x514312;
    }, _0x32ca(_0x420354, _0x9b9012);
}
_0xa02eff[_0x146ad8(0x9c)] = !![], Object[_0x146ad8(0x81) + _0x146ad8(0xd8)](exports, _0x146ad8(0x95), _0xa02eff);
const sequelize_1 = require(_0x146ad8(0xd7)), Ticket_1 = __importDefault(require(_0x146ad8(0xc8) + _0x146ad8(0xbb))), socketEmit_1 = __importDefault(require(_0x146ad8(0xad) + _0x146ad8(0xae) + _0x146ad8(0xf9))), FindUpdateTicketsInactiveChatBot = async () => {
        const _0x1ac12b = _0x146ad8, _0x57ca73 = {};
        _0x57ca73[_0x1ac12b(0xb4)] = function (_0x3ef1de, _0xc18e6b) {
            return _0x3ef1de == _0xc18e6b;
        }, _0x57ca73[_0x1ac12b(0x91)] = function (_0x3f0e98, _0x448037) {
            return _0x3f0e98 == _0x448037;
        }, _0x57ca73[_0x1ac12b(0xdc)] = _0x1ac12b(0xa7) + _0x1ac12b(0xc4);
        const _0xcfe29e = _0x57ca73, _0xdc5150 = _0x1ac12b(0xfd) + _0x1ac12b(0xf1) + _0x1ac12b(0x88) + _0x1ac12b(0xda) + _0x1ac12b(0xb1) + _0x1ac12b(0xa8) + _0x1ac12b(0xe9) + _0x1ac12b(0xb1) + _0x1ac12b(0xf4) + _0x1ac12b(0xde) + _0x1ac12b(0xc0) + _0x1ac12b(0xce) + _0x1ac12b(0xe3) + _0x1ac12b(0xd2) + _0x1ac12b(0xc2) + _0x1ac12b(0xed) + _0x1ac12b(0xd6) + _0x1ac12b(0xcf) + _0x1ac12b(0xdd) + _0x1ac12b(0xfc) + _0x1ac12b(0xaa) + _0x1ac12b(0xa3) + _0x1ac12b(0xeb) + _0x1ac12b(0x94) + _0x1ac12b(0x7f) + _0x1ac12b(0xe1) + _0x1ac12b(0x7e) + _0x1ac12b(0x83) + _0x1ac12b(0x87) + _0x1ac12b(0xcb) + _0x1ac12b(0x84) + _0x1ac12b(0xfb) + _0x1ac12b(0xf3) + _0x1ac12b(0x97) + _0x1ac12b(0xa2) + _0x1ac12b(0x9a) + _0x1ac12b(0x9e) + _0x1ac12b(0xa9) + _0x1ac12b(0xaf) + _0x1ac12b(0xa5) + _0x1ac12b(0xb5) + _0x1ac12b(0x8d) + _0x1ac12b(0xc9) + _0x1ac12b(0x99) + _0x1ac12b(0xb0) + _0x1ac12b(0xdb) + _0x1ac12b(0xe8) + _0x1ac12b(0xd9) + _0x1ac12b(0xf2) + _0x1ac12b(0xea) + _0x1ac12b(0xf7) + _0x1ac12b(0xa6) + _0x1ac12b(0xc5) + _0x1ac12b(0xfa) + _0x1ac12b(0xf5) + _0x1ac12b(0xca) + _0x1ac12b(0x85) + _0x1ac12b(0xb8) + _0x1ac12b(0xa0) + _0x1ac12b(0xb2) + _0x1ac12b(0xb7) + _0x1ac12b(0xbd) + _0x1ac12b(0x9b) + _0x1ac12b(0xe7) + _0x1ac12b(0x98) + _0x1ac12b(0xe0) + _0x1ac12b(0x8e) + _0x1ac12b(0xb9) + _0x1ac12b(0xee) + _0x1ac12b(0x96) + _0x1ac12b(0xe5) + _0x1ac12b(0xd3) + _0x1ac12b(0x90) + _0x1ac12b(0x92) + _0x1ac12b(0x8b) + _0x1ac12b(0xd0) + _0x1ac12b(0xcd) + _0x1ac12b(0x82) + _0x1ac12b(0xdf) + _0x1ac12b(0xab) + _0x1ac12b(0xef) + _0x1ac12b(0xa1) + _0x1ac12b(0xd2) + _0x1ac12b(0xc2) + _0x1ac12b(0xed) + _0x1ac12b(0xd6) + _0x1ac12b(0xcf) + _0x1ac12b(0xdd) + _0x1ac12b(0xfc) + _0x1ac12b(0xaa) + _0x1ac12b(0xbc) + _0x1ac12b(0xc6) + _0x1ac12b(0xbf) + _0x1ac12b(0xf0) + _0x1ac12b(0x80) + _0x1ac12b(0xb6), _0x429ae6 = {};
        _0x429ae6[_0x1ac12b(0xd4)] = sequelize_1[_0x1ac12b(0xac)][_0x1ac12b(0xc3)];
        const _0x4a221c = await Ticket_1[_0x1ac12b(0xd1)][_0x1ac12b(0xd7)]?.[_0x1ac12b(0x93)](_0xdc5150, _0x429ae6);
        Promise[_0x1ac12b(0x9d)](_0x4a221c[_0x1ac12b(0x89)](async _0x214c4e => {
            const _0x33453c = _0x1ac12b;
            if (!_0x214c4e[_0x33453c(0x8c)])
                return;
            const _0x1b4db2 = await Ticket_1[_0x33453c(0xd1)][_0x33453c(0xb3)](_0x214c4e['id']);
            if (_0x1b4db2) {
                const _0xa7e152 = {
                    'chatFlowId': null,
                    'stepChatFlow': null,
                    'botRetries': 0x0,
                    'lastInteractionBot': new Date()
                };
                _0xcfe29e[_0x33453c(0xb4)](_0x214c4e[_0x33453c(0xcb) + 'n'], 0x5 * 0x79 + -0x1f4f + 0x1cf3) && (_0xa7e152[_0x33453c(0xc7)] = _0x214c4e[_0x33453c(0x8c)]);
                _0xcfe29e[_0x33453c(0x91)](_0x214c4e[_0x33453c(0xcb) + 'n'], 0x9 * -0x1d3 + 0xa08 * 0x3 + -0xdab) && (_0xa7e152[_0x33453c(0xe6)] = _0x214c4e[_0x33453c(0x8c)]);
                await _0x1b4db2[_0x33453c(0xf8)](_0xa7e152);
                const _0x2cb0b5 = {};
                _0x2cb0b5[_0x33453c(0x9f)] = _0x1b4db2[_0x33453c(0x9f)], _0x2cb0b5[_0x33453c(0xd4)] = _0xcfe29e[_0x33453c(0xdc)], _0x2cb0b5[_0x33453c(0xec)] = _0x1b4db2, (0x1a42 + -0x2361 + 0x5 * 0x1d3, socketEmit_1[_0x33453c(0xd1)])(_0x2cb0b5);
            }
        }));
    };
exports[_0x146ad8(0xd1)] = FindUpdateTicketsInactiveChatBot;