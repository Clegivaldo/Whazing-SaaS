'use strict';
const _0x8dcfbc = _0x3258;
(function (_0x547d2b, _0xf7aa9) {
    const _0x4a64df = _0x3258, _0x1db7a5 = _0x547d2b();
    while (!![]) {
        try {
            const _0x24e3c3 = -parseInt(_0x4a64df(0x1af)) / (0x2 * -0x1006 + 0x2b * -0x33 + -0x1 * -0x289e) * (parseInt(_0x4a64df(0x1b9)) / (-0x1 * -0x3bb + 0xbd * -0x2b + 0x1c06)) + parseInt(_0x4a64df(0x1aa)) / (0x192 + -0x177d + -0x2 * -0xaf7) * (parseInt(_0x4a64df(0x1ce)) / (0x124 * 0x3 + -0x10ef + 0xd87)) + parseInt(_0x4a64df(0x1c2)) / (0xb2 * -0x27 + 0xcb1 * 0x3 + 0x19 * -0x70) * (-parseInt(_0x4a64df(0x1b2)) / (0x3 * -0x359 + -0x2d * -0x7f + -0xc42)) + parseInt(_0x4a64df(0x1d5)) / (0x3b4 + -0x1ebd + -0x10 * -0x1b1) * (-parseInt(_0x4a64df(0x1b8)) / (-0x8af + -0x51c + 0xdd3)) + parseInt(_0x4a64df(0x1c7)) / (0x107 + -0x5 * -0x40f + -0x1549) + -parseInt(_0x4a64df(0x1b3)) / (0x1 * -0x1dca + -0x6b8 + -0x248c * -0x1) * (-parseInt(_0x4a64df(0x1cf)) / (0xe11 + -0x1d2c + -0x115 * -0xe)) + parseInt(_0x4a64df(0x1be)) / (0x156 + -0x1ad6 + 0x198c);
            if (_0x24e3c3 === _0xf7aa9)
                break;
            else
                _0x1db7a5['push'](_0x1db7a5['shift']());
        } catch (_0x38c2d4) {
            _0x1db7a5['push'](_0x1db7a5['shift']());
        }
    }
}(_0x5176, 0x13f * -0x221 + -0x159ecc + 0x2548e4));
function _0x3258(_0x1d96b6, _0x298e97) {
    const _0x178ba9 = _0x5176();
    return _0x3258 = function (_0x5ed6eb, _0x1c6dcf) {
        _0x5ed6eb = _0x5ed6eb - (0x1 * -0x91c + -0x47 * -0x83 + -0x198f);
        let _0x4442ff = _0x178ba9[_0x5ed6eb];
        return _0x4442ff;
    }, _0x3258(_0x1d96b6, _0x298e97);
}
var __importDefault = this && this[_0x8dcfbc(0x1c0) + _0x8dcfbc(0x1ad)] || function (_0x35f762) {
    const _0x2efc8a = _0x8dcfbc;
    return _0x35f762 && _0x35f762[_0x2efc8a(0x1bd)] ? _0x35f762 : { 'default': _0x35f762 };
};
const _0x50f0d8 = {};
function _0x5176() {
    const _0x1d860d = [
        '231jOZEtZ',
        'defineProp',
        'MOMxI',
        'type',
        'split',
        'chatFlowId',
        '889bmAMEo',
        '33588aXDqxw',
        'Emit',
        'KET_FOUND',
        'fault',
        '2|0|1|3|4',
        '1aMnLqN',
        'userId',
        'stepChatFl',
        '12hIHzoy',
        '660590onHHGb',
        'ERR_NO_TIC',
        'payload',
        'is_chat_ia',
        'erty',
        '43336AldUBf',
        '836586xzRLkd',
        'queueId',
        'pHYXw',
        '../../help',
        '__esModule',
        '11396784yEiorM',
        'ticket',
        '__importDe',
        'ers/socket',
        '3069835issxgG',
        'ticket:upd',
        'rs/AppErro',
        'value',
        'reload',
        '5936508Fymwpj',
        'tenantId',
        'default',
        '../../erro',
        'update',
        'ate',
        'PGyxm',
        '68RzadmX'
    ];
    _0x5176 = function () {
        return _0x1d860d;
    };
    return _0x5176();
}
_0x50f0d8[_0x8dcfbc(0x1c5)] = !![], Object[_0x8dcfbc(0x1d0) + _0x8dcfbc(0x1b7)](exports, _0x8dcfbc(0x1bd), _0x50f0d8);
const AppError_1 = __importDefault(require(_0x8dcfbc(0x1ca) + _0x8dcfbc(0x1c4) + 'r')), socketEmit_1 = __importDefault(require(_0x8dcfbc(0x1bc) + _0x8dcfbc(0x1c1) + _0x8dcfbc(0x1ab))), UpdateQueueIATicket = async (_0x50b22e, _0x20d6b0, _0x46585d = null) => {
        const _0x421a03 = _0x8dcfbc, _0x538228 = {};
        _0x538228[_0x421a03(0x1d1)] = _0x421a03(0x1ae), _0x538228[_0x421a03(0x1cd)] = _0x421a03(0x1b4) + _0x421a03(0x1ac), _0x538228[_0x421a03(0x1bb)] = _0x421a03(0x1c3) + _0x421a03(0x1cc);
        const _0x4dca89 = _0x538228, _0x47f463 = _0x4dca89[_0x421a03(0x1d1)][_0x421a03(0x1d3)]('|');
        let _0x215c3e = 0x12f2 + 0x425 * -0x1 + -0xecd;
        while (!![]) {
            switch (_0x47f463[_0x215c3e++]) {
            case '0':
                const _0x5bb60d = {};
                _0x5bb60d[_0x421a03(0x1ba)] = _0x50b22e, _0x5bb60d[_0x421a03(0x1b1) + 'ow'] = null, _0x5bb60d[_0x421a03(0x1d4)] = null, _0x5bb60d[_0x421a03(0x1b6)] = ![], _0x5bb60d[_0x421a03(0x1b0)] = _0x46585d, await _0x20d6b0[_0x421a03(0x1cb)](_0x5bb60d);
                continue;
            case '1':
                await _0x20d6b0[_0x421a03(0x1c6)]();
                continue;
            case '2':
                if (!_0x20d6b0)
                    throw new AppError_1[(_0x421a03(0x1c9))](_0x4dca89[_0x421a03(0x1cd)], 0x2 * -0xfc9 + -0x1747 * -0x1 + -0x1 * -0x9df);
                continue;
            case '3':
                const _0x3cdd68 = {};
                _0x3cdd68[_0x421a03(0x1c8)] = _0x20d6b0[_0x421a03(0x1c8)], _0x3cdd68[_0x421a03(0x1d2)] = _0x4dca89[_0x421a03(0x1bb)], _0x3cdd68[_0x421a03(0x1b5)] = _0x20d6b0, (-0x3a9 * -0x5 + 0x81e + 0x1 * -0x1a6b, socketEmit_1[_0x421a03(0x1c9)])(_0x3cdd68);
                continue;
            case '4':
                const _0x39b822 = {};
                _0x39b822[_0x421a03(0x1bf)] = _0x20d6b0;
                return _0x39b822;
            }
            break;
        }
    };
exports[_0x8dcfbc(0x1c9)] = UpdateQueueIATicket;