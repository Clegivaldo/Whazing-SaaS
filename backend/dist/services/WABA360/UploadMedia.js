'use strict';
const _0x4546a0 = _0x28c1;
(function (_0x5d71b8, _0xdc1d18) {
    const _0x337821 = _0x28c1, _0x1ff112 = _0x5d71b8();
    while (!![]) {
        try {
            const _0x17fc5a = -parseInt(_0x337821(0x155)) / (0xf * 0x239 + 0x117 * -0xb + -0x1559) * (-parseInt(_0x337821(0x167)) / (0x6a7 * 0x2 + 0x1223 * 0x2 + -0x1b * 0x1d6)) + parseInt(_0x337821(0x15e)) / (-0xeb * -0xb + -0x11a * 0x13 + 0xad8 * 0x1) * (-parseInt(_0x337821(0x170)) / (0x22 * 0xcf + -0x86 * -0x42 + -0x3e06)) + -parseInt(_0x337821(0x150)) / (-0x13bd * 0x1 + 0x5 * -0x5cf + -0x3c1 * -0xd) + -parseInt(_0x337821(0x157)) / (0x23c7 + -0xdcd + -0x5 * 0x464) + parseInt(_0x337821(0x16d)) / (-0xa5b * 0x2 + 0x188f * -0x1 + -0x1 * -0x2d4c) * (parseInt(_0x337821(0x173)) / (0x12e6 + -0x1 * 0x25dc + -0x1a * -0xbb)) + -parseInt(_0x337821(0x16a)) / (-0x2332 + -0x183b + 0x3b76) * (parseInt(_0x337821(0x14c)) / (0x21a * -0x2 + 0x13d * 0x7 + -0x46d)) + -parseInt(_0x337821(0x169)) / (0x12 * -0xb7 + -0xe * -0xd3 + 0x1b * 0xd) * (-parseInt(_0x337821(0x163)) / (-0xe5 * 0x7 + -0x1011 * 0x1 + 0x4 * 0x598));
            if (_0x17fc5a === _0xdc1d18)
                break;
            else
                _0x1ff112['push'](_0x1ff112['shift']());
        } catch (_0x131598) {
            _0x1ff112['push'](_0x1ff112['shift']());
        }
    }
}(_0x5d10, 0x9db * 0x67 + 0xeae8 + -0x27755 * 0x1));
var __importDefault = this && this[_0x4546a0(0x172) + _0x4546a0(0x15f)] || function (_0x210bad) {
    const _0x48f51e = _0x4546a0;
    return _0x210bad && _0x210bad[_0x48f51e(0x151)] ? _0x210bad : { 'default': _0x210bad };
};
function _0x28c1(_0x13ba26, _0x5a169f) {
    const _0xca2822 = _0x5d10();
    return _0x28c1 = function (_0x18ac8f, _0x218bd7) {
        _0x18ac8f = _0x18ac8f - (-0x1 * 0x210d + 0xccb * -0x2 + -0x211 * -0x1d);
        let _0x50206a = _0xca2822[_0x18ac8f];
        return _0x50206a;
    }, _0x28c1(_0x13ba26, _0x5a169f);
}
const _0x14efd6 = {};
function _0x5d10() {
    const _0x1a93f3 = [
        'method',
        'gPnrK',
        'default',
        'headers',
        'post',
        '6AMvhwZ',
        'fault',
        'file',
        'rs/AppErro',
        's/logger',
        '3940836VMoGqg',
        'data',
        'Content-Ty',
        '../../erro',
        '2vWqUoM',
        'multipart/',
        '11iCoWkp',
        '1233873LoHdKb',
        'D360-API-K',
        'url',
        '499142spprTd',
        '/v1/media',
        'defineProp',
        '469224uSXlzm',
        'logger',
        '__importDe',
        '8fxywrq',
        '360_NOT_UP',
        'LOAD_MEDIA',
        'env',
        '10nHsCPe',
        'erty',
        'API_URL_36',
        'axios',
        '207220GpamjG',
        '__esModule',
        '../../util',
        'value',
        'EnrDl',
        '285179ReuxQP',
        'error',
        '680106QsFuLV',
        'form-data'
    ];
    _0x5d10 = function () {
        return _0x1a93f3;
    };
    return _0x5d10();
}
_0x14efd6[_0x4546a0(0x153)] = !![], Object[_0x4546a0(0x16f) + _0x4546a0(0x14d)](exports, _0x4546a0(0x151), _0x14efd6);
const axios_1 = __importDefault(require(_0x4546a0(0x14f))), AppError_1 = __importDefault(require(_0x4546a0(0x166) + _0x4546a0(0x161) + 'r')), logger_1 = require(_0x4546a0(0x152) + _0x4546a0(0x162)), UploadMedia = async ({
        file: _0x15cb2a,
        apiKey: _0x4c544e
    }) => {
        const _0x302668 = _0x4546a0, _0x406f96 = {};
        _0x406f96[_0x302668(0x15a)] = _0x302668(0x15d), _0x406f96[_0x302668(0x154)] = _0x302668(0x168) + _0x302668(0x158);
        const _0x128742 = _0x406f96, _0x5f5526 = process[_0x302668(0x14b)][_0x302668(0x14e) + '0'] + _0x302668(0x16e);
        try {
            const _0x4f5630 = {};
            _0x4f5630[_0x302668(0x160)] = _0x15cb2a;
            const _0x15e377 = {};
            _0x15e377[_0x302668(0x159)] = _0x128742[_0x302668(0x15a)], _0x15e377[_0x302668(0x16c)] = _0x5f5526, _0x15e377[_0x302668(0x164)] = _0x4f5630, _0x15e377[_0x302668(0x15c)] = {}, _0x15e377[_0x302668(0x15c)][_0x302668(0x16b) + 'EY'] = _0x4c544e, _0x15e377[_0x302668(0x15c)][_0x302668(0x165) + 'pe'] = _0x128742[_0x302668(0x154)];
            const _0x2d54cc = await (0xacf * -0x2 + -0x1b03 * -0x1 + -0x565, axios_1[_0x302668(0x15b)])(_0x15e377);
            return _0x2d54cc[_0x302668(0x164)];
        } catch (_0x1144a9) {
            logger_1[_0x302668(0x171)][_0x302668(0x156)](_0x1144a9);
            throw new AppError_1[(_0x302668(0x15b))](_0x302668(0x174) + _0x302668(0x14a) + ':\x20' + _0x1144a9);
        }
    };
exports[_0x4546a0(0x15b)] = UploadMedia;