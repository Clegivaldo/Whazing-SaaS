'use strict';
const _0x541bb3 = _0x448b;
(function (_0x4edb69, _0x103182) {
    const _0x363ab8 = _0x448b, _0x702c7b = _0x4edb69();
    while (!![]) {
        try {
            const _0x319868 = -parseInt(_0x363ab8(0x130)) / (0x961 + -0x2b0 * 0xd + -0x664 * -0x4) * (-parseInt(_0x363ab8(0x14a)) / (-0x877 * -0x2 + 0x8 * -0xd0 + -0xa6c)) + -parseInt(_0x363ab8(0x14b)) / (-0x1 * 0x1fa5 + -0x131d + 0x32c5) + parseInt(_0x363ab8(0x134)) / (0x1e94 + 0x126d + -0x30fd * 0x1) * (-parseInt(_0x363ab8(0x142)) / (0x11f2 + 0x1194 + -0x1 * 0x2381)) + -parseInt(_0x363ab8(0x143)) / (-0x599 * 0x2 + -0x105f + 0x1b97) * (parseInt(_0x363ab8(0x137)) / (0x3a1 * 0x3 + 0xa5a + -0xa9b * 0x2)) + parseInt(_0x363ab8(0x14e)) / (0x774 + 0xc8b + -0x13f7) + parseInt(_0x363ab8(0x14c)) / (-0x1714 + -0x1a88 + 0x31a5) * (-parseInt(_0x363ab8(0x12f)) / (0xdae + 0x2 * -0xc8c + -0xb74 * -0x1)) + parseInt(_0x363ab8(0x12a)) / (-0x91d * -0x3 + 0x21fb + -0x3d47) * (parseInt(_0x363ab8(0x148)) / (0xc * 0x319 + -0x10ad * 0x1 + -0x3 * 0x6d1));
            if (_0x319868 === _0x103182)
                break;
            else
                _0x702c7b['push'](_0x702c7b['shift']());
        } catch (_0x5dba24) {
            _0x702c7b['push'](_0x702c7b['shift']());
        }
    }
}(_0x41e2, 0xc7f3 + 0x1 * -0xfd505 + 0x2e * 0x8fdf));
function _0x448b(_0x3b8b05, _0x1aec10) {
    const _0x193272 = _0x41e2();
    return _0x448b = function (_0xcf27f0, _0x1f38c7) {
        _0xcf27f0 = _0xcf27f0 - (0x1 * 0x62b + -0x228c + 0x1d8b);
        let _0x3762f7 = _0x193272[_0xcf27f0];
        return _0x3762f7;
    }, _0x448b(_0x3b8b05, _0x1aec10);
}
var __importDefault = this && this[_0x541bb3(0x131) + _0x541bb3(0x13b)] || function (_0x1de8b8) {
    const _0x69ce08 = _0x541bb3;
    return _0x1de8b8 && _0x1de8b8[_0x69ce08(0x136)] ? _0x1de8b8 : { 'default': _0x1de8b8 };
};
function _0x41e2() {
    const _0xf2137f = [
        'fault',
        'EPLY_RELAT',
        'value',
        'defineProp',
        'UND',
        'ls/Ticket',
        'KmUAd',
        '630jTmmpj',
        '404148BadvcB',
        'IONED_TICK',
        'tenantId',
        'HSUTF',
        'O_REPLY_FO',
        '35569188TbSojT',
        '../../erro',
        '679602SdrqPD',
        '594801zthQFy',
        '12073536pnQzgx',
        'findOne',
        '1081144MkSWCO',
        '11ZLnEXf',
        'ERR_AUTO_R',
        'erty',
        'ERR_NO_AUT',
        'where',
        '10VyGZbr',
        '1SvYiVj',
        '__importDe',
        'rs/AppErro',
        '../../mode',
        '5748nLbYlD',
        'destroy',
        '__esModule',
        '105qWfGxp',
        'autoReplyI',
        'ls/AutoRep',
        'default'
    ];
    _0x41e2 = function () {
        return _0xf2137f;
    };
    return _0x41e2();
}
const _0x1846e8 = {};
_0x1846e8[_0x541bb3(0x13d)] = !![], Object[_0x541bb3(0x13e) + _0x541bb3(0x12c)](exports, _0x541bb3(0x136), _0x1846e8);
const AutoReply_1 = __importDefault(require(_0x541bb3(0x133) + _0x541bb3(0x139) + 'ly')), AppError_1 = __importDefault(require(_0x541bb3(0x149) + _0x541bb3(0x132) + 'r')), Ticket_1 = __importDefault(require(_0x541bb3(0x133) + _0x541bb3(0x140))), DeleteAutoReplyService = async ({
        id: _0x4c6e3d,
        tenantId: _0x5a54c5
    }) => {
        const _0x41bbc2 = _0x541bb3, _0xff6879 = {};
        _0xff6879[_0x41bbc2(0x141)] = _0x41bbc2(0x12b) + _0x41bbc2(0x13c) + _0x41bbc2(0x144) + 'ET', _0xff6879[_0x41bbc2(0x146)] = _0x41bbc2(0x12d) + _0x41bbc2(0x147) + _0x41bbc2(0x13f);
        const _0x237786 = _0xff6879, _0x5bf659 = {};
        _0x5bf659['id'] = _0x4c6e3d, _0x5bf659[_0x41bbc2(0x145)] = _0x5a54c5;
        const _0x31416e = {};
        _0x31416e[_0x41bbc2(0x12e)] = _0x5bf659;
        const _0x3b0bf1 = await AutoReply_1[_0x41bbc2(0x13a)][_0x41bbc2(0x14d)](_0x31416e), _0x483d0 = {};
        _0x483d0[_0x41bbc2(0x138) + 'd'] = _0x4c6e3d;
        const _0xd669d8 = {};
        _0xd669d8[_0x41bbc2(0x12e)] = _0x483d0;
        const _0x4714a3 = await Ticket_1[_0x41bbc2(0x13a)][_0x41bbc2(0x14d)](_0xd669d8);
        if (_0x4714a3)
            throw new AppError_1[(_0x41bbc2(0x13a))](_0x237786[_0x41bbc2(0x141)], 0x1fdb + -0xf5f + -0xee8);
        if (!_0x3b0bf1)
            throw new AppError_1[(_0x41bbc2(0x13a))](_0x237786[_0x41bbc2(0x146)], 0x897 + 0x23b1 + -0x2ab4);
        await _0x3b0bf1[_0x41bbc2(0x135)]();
    };
exports[_0x541bb3(0x13a)] = DeleteAutoReplyService;