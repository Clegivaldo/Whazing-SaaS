'use strict';
const _0x31b6e9 = _0x2dea;
(function (_0xac3b01, _0x36f469) {
    const _0x2bd662 = _0x2dea, _0x368c46 = _0xac3b01();
    while (!![]) {
        try {
            const _0x51b4ee = parseInt(_0x2bd662(0x179)) / (-0xa1d * 0x2 + 0x1 * -0x22eb + 0x3726) * (-parseInt(_0x2bd662(0x16b)) / (-0x1e * 0x47 + -0x662 + 0x1 * 0xeb6)) + -parseInt(_0x2bd662(0x180)) / (0x1 * 0x2323 + -0x1df + -0x1 * 0x2141) * (parseInt(_0x2bd662(0x165)) / (-0x2 * 0x259 + -0x1c22 + 0x20d8)) + parseInt(_0x2bd662(0x171)) / (-0xb70 + -0x1 * -0x1cca + -0x57 * 0x33) + parseInt(_0x2bd662(0x17c)) / (0xf3c + -0x9 * 0x28b + 0x7ad) * (-parseInt(_0x2bd662(0x170)) / (0x4 * 0x887 + -0x2 * 0x6e3 + 0x144f * -0x1)) + parseInt(_0x2bd662(0x172)) / (0x1 * 0x577 + -0xa97 + 0x1 * 0x528) * (-parseInt(_0x2bd662(0x17a)) / (0x2 * 0x6f5 + 0x1 * 0x27a + 0x105b * -0x1)) + parseInt(_0x2bd662(0x17d)) / (-0x4a * -0x75 + -0x21fe + 0x36) + parseInt(_0x2bd662(0x175)) / (-0x13d * 0x4 + 0xc5a + -0x1 * 0x75b);
            if (_0x51b4ee === _0x36f469)
                break;
            else
                _0x368c46['push'](_0x368c46['shift']());
        } catch (_0x5c1da8) {
            _0x368c46['push'](_0x368c46['shift']());
        }
    }
}(_0x55eb, 0x18a5b + -0x7a5d3 + -0x843d * -0x20));
var __importDefault = this && this[_0x31b6e9(0x174) + _0x31b6e9(0x167)] || function (_0xdcb612) {
    const _0x487e13 = _0x31b6e9;
    return _0xdcb612 && _0xdcb612[_0x487e13(0x16a)] ? _0xdcb612 : { 'default': _0xdcb612 };
};
const _0x4c47a6 = {};
function _0x2dea(_0x5b8c00, _0x36882a) {
    const _0x3c97ec = _0x55eb();
    return _0x2dea = function (_0x57573d, _0x773606) {
        _0x57573d = _0x57573d - (-0x1 * 0x778 + 0x18c1 * 0x1 + -0xfed);
        let _0x270d95 = _0x3c97ec[_0x57573d];
        return _0x270d95;
    }, _0x2dea(_0x5b8c00, _0x36882a);
}
function _0x55eb() {
    const _0x75d409 = [
        'attributes',
        'dtYIR',
        '84mPSyoi',
        '5056565ARVmIo',
        '1691920nRwJxa',
        '../../erro',
        '__importDe',
        '6369341EeykUg',
        'UE_FOUND',
        '../../mode',
        'ls/Queue',
        '2CUwIBu',
        '18cOFJoX',
        'where',
        '531528zhAvsc',
        '10162110tpUGtG',
        'SNwak',
        'reload',
        '9EMWuws',
        'isActive',
        'userId',
        'tenantId',
        'defineProp',
        'NNnhV',
        'default',
        'erty',
        'findOne',
        'ElEqR',
        'value',
        'from_ia',
        '229004sqMLCi',
        'FFKuG',
        'fault',
        'queue',
        'update',
        '__esModule',
        '265718ZqmXdN',
        'ERR_NO_QUE',
        'rs/AppErro'
    ];
    _0x55eb = function () {
        return _0x75d409;
    };
    return _0x55eb();
}
_0x4c47a6[_0x31b6e9(0x163)] = !![], Object[_0x31b6e9(0x15d) + _0x31b6e9(0x160)](exports, _0x31b6e9(0x16a), _0x4c47a6);
const AppError_1 = __importDefault(require(_0x31b6e9(0x173) + _0x31b6e9(0x16d) + 'r')), Queue_1 = __importDefault(require(_0x31b6e9(0x177) + _0x31b6e9(0x178))), UpdateQueueService = async ({
        queueData: _0x5d481e,
        queueId: _0x335a14
    }) => {
        const _0x33f79a = _0x31b6e9, _0x14076d = {};
        _0x14076d[_0x33f79a(0x162)] = _0x33f79a(0x168), _0x14076d[_0x33f79a(0x17e)] = _0x33f79a(0x181), _0x14076d[_0x33f79a(0x15e)] = _0x33f79a(0x182), _0x14076d[_0x33f79a(0x16f)] = _0x33f79a(0x164), _0x14076d[_0x33f79a(0x166)] = _0x33f79a(0x16c) + _0x33f79a(0x176);
        const _0x3c1f7b = _0x14076d, {
                queue: _0x1b2748,
                isActive: _0x32d427,
                userId: _0x1099b8,
                tenantId: _0x255d9f,
                from_ia: _0x32f070
            } = _0x5d481e, _0x5588ef = {};
        _0x5588ef['id'] = _0x335a14, _0x5588ef[_0x33f79a(0x15c)] = _0x255d9f;
        const _0x5c6a68 = {};
        _0x5c6a68[_0x33f79a(0x17b)] = _0x5588ef, _0x5c6a68[_0x33f79a(0x16e)] = [
            'id',
            _0x3c1f7b[_0x33f79a(0x162)],
            _0x3c1f7b[_0x33f79a(0x17e)],
            _0x3c1f7b[_0x33f79a(0x15e)],
            _0x3c1f7b[_0x33f79a(0x16f)]
        ];
        const _0x26112c = await Queue_1[_0x33f79a(0x15f)][_0x33f79a(0x161)](_0x5c6a68);
        if (!_0x26112c)
            throw new AppError_1[(_0x33f79a(0x15f))](_0x3c1f7b[_0x33f79a(0x166)], -0x17c0 + 0x1bac + 0x258 * -0x1);
        const _0x231739 = {};
        _0x231739[_0x33f79a(0x168)] = _0x1b2748, _0x231739[_0x33f79a(0x181)] = _0x32d427, _0x231739[_0x33f79a(0x164)] = _0x32f070, _0x231739[_0x33f79a(0x182)] = _0x1099b8, await _0x26112c[_0x33f79a(0x169)](_0x231739);
        const _0x1eb08c = {};
        return _0x1eb08c[_0x33f79a(0x16e)] = [
            'id',
            _0x3c1f7b[_0x33f79a(0x162)],
            _0x3c1f7b[_0x33f79a(0x17e)],
            _0x3c1f7b[_0x33f79a(0x15e)],
            _0x3c1f7b[_0x33f79a(0x16f)]
        ], await _0x26112c[_0x33f79a(0x17f)](_0x1eb08c), _0x26112c;
    };
exports[_0x31b6e9(0x15f)] = UpdateQueueService;