'use strict';
const _0x2f5725 = _0xd189;
(function (_0x5cbc9b, _0x3b74f7) {
    const _0x5e8ef2 = _0xd189, _0x1e7f40 = _0x5cbc9b();
    while (!![]) {
        try {
            const _0xf989ec = parseInt(_0x5e8ef2(0x185)) / (-0x17aa + 0x263c + 0x21 * -0x71) + parseInt(_0x5e8ef2(0x169)) / (0x1 * 0x94d + -0x76d * 0x1 + 0xef * -0x2) + -parseInt(_0x5e8ef2(0x1b9)) / (-0x9e8 + -0xbb * -0x31 + -0x19e0) + parseInt(_0x5e8ef2(0x1da)) / (-0x18 + 0x1 * -0x1181 + -0x119d * -0x1) * (parseInt(_0x5e8ef2(0x1e3)) / (0x24f + 0xc9d * 0x2 + 0x24b * -0xc)) + -parseInt(_0x5e8ef2(0x160)) / (0x1bd1 + 0x1 * 0x160b + -0x31d6) + parseInt(_0x5e8ef2(0x1f9)) / (-0x26c8 + -0x5 * -0x7d + -0xa * -0x3a3) + parseInt(_0x5e8ef2(0x1af)) / (0x1 * -0x1463 + 0xc25 * 0x2 + -0x3df) * (-parseInt(_0x5e8ef2(0x162)) / (-0x14b4 + 0x165d + -0x1a0));
            if (_0xf989ec === _0x3b74f7)
                break;
            else
                _0x1e7f40['push'](_0x1e7f40['shift']());
        } catch (_0x43f8ba) {
            _0x1e7f40['push'](_0x1e7f40['shift']());
        }
    }
}(_0x5bb3, 0x73a36 + 0x9927d * 0x1 + -0xa51a7));
var __importDefault = this && this[_0x2f5725(0x1b4) + _0x2f5725(0x1f4)] || function (_0x3b0c5f) {
    const _0x3b1a1b = _0x2f5725;
    return _0x3b0c5f && _0x3b0c5f[_0x3b1a1b(0x193)] ? _0x3b0c5f : { 'default': _0x3b0c5f };
};
const _0x54cdc9 = {};
_0x54cdc9[_0x2f5725(0x187)] = !![], Object[_0x2f5725(0x188) + _0x2f5725(0x1de)](exports, _0x2f5725(0x193), _0x54cdc9);
const socketEmit_1 = __importDefault(require(_0x2f5725(0x1d9) + _0x2f5725(0x1f2) + _0x2f5725(0x1d8))), CreateMessageSystemService_1 = __importDefault(require(_0x2f5725(0x16a) + _0x2f5725(0x19b) + _0x2f5725(0x1c9) + _0x2f5725(0x1ad) + _0x2f5725(0x174))), CreateLogTicketService_1 = __importDefault(require(_0x2f5725(0x1ed) + _0x2f5725(0x17e) + _0x2f5725(0x1c5) + _0x2f5725(0x175))), BuildSendMessageService_1 = __importDefault(require(_0x2f5725(0x1c0) + _0x2f5725(0x178) + _0x2f5725(0x174))), DefinedUserBotService_1 = __importDefault(require(_0x2f5725(0x17d) + _0x2f5725(0x1d3) + _0x2f5725(0x1d7))), IsContactTest_1 = __importDefault(require(_0x2f5725(0x198) + _0x2f5725(0x15f))), VerifyContactBaileys_1 = require(_0x2f5725(0x161) + _0x2f5725(0x196) + _0x2f5725(0x189) + _0x2f5725(0x1b0) + _0x2f5725(0x1b8)), VerifyMensageOpenIAQueue_1 = __importDefault(require(_0x2f5725(0x1c1) + _0x2f5725(0x181) + _0x2f5725(0x177) + _0x2f5725(0x1f0))), Queue_1 = __importDefault(require(_0x2f5725(0x1f6) + _0x2f5725(0x15d))), SetTicketMessagesAsRead_1 = __importDefault(require(_0x2f5725(0x1d9) + _0x2f5725(0x1ec) + _0x2f5725(0x18f) + _0x2f5725(0x197))), isNextSteps = async (_0xa4d26f, _0x5c78d3, _0x293958, _0x48622b) => {
        const _0x384686 = _0x2f5725, _0x1b6ff4 = {};
        _0x1b6ff4[_0x384686(0x1fc)] = function (_0x35787e, _0x3bc4ea) {
            return _0x35787e === _0x3bc4ea;
        };
        const _0x97c6ce = _0x1b6ff4;
        if (_0x97c6ce[_0x384686(0x1fc)](_0x48622b[_0x384686(0x192)], 0x7 * -0x12b + -0x761 + 0xf8e)) {
            await _0xa4d26f[_0x384686(0x1cf)]({
                'stepChatFlow': _0x48622b[_0x384686(0x1c2)],
                'botRetries': 0x0,
                'lastInteractionBot': new Date()
            });
            const _0x3cc7e4 = [..._0x5c78d3[_0x384686(0x171)][_0x384686(0x1cb)]], _0x9494d5 = _0x3cc7e4[_0x384686(0x19e)](_0x1eabb8 => _0x1eabb8['id'] === _0x48622b[_0x384686(0x1c2)]);
            if (!_0x9494d5)
                return;
            for (const _0xc63bf8 of _0x9494d5[_0x384686(0x1bd) + 'ns']) {
                const _0x4fe5bd = {};
                _0x4fe5bd[_0x384686(0x1b3)] = _0xc63bf8, _0x4fe5bd[_0x384686(0x176)] = _0xa4d26f[_0x384686(0x176)], _0x4fe5bd[_0x384686(0x1c3)] = _0xa4d26f, await (0x13af * 0x1 + 0x6d5 + 0xd42 * -0x2, BuildSendMessageService_1[_0x384686(0x1a3)])(_0x4fe5bd);
            }
            await (-0x5a + -0x12c5 + -0x131f * -0x1, SetTicketMessagesAsRead_1[_0x384686(0x1a3)])(_0xa4d26f);
        }
    }, isQueueDefine = async (_0x471a0c, _0x5c16a0, _0x24c16e, _0x13e921) => {
        const _0x24e619 = _0x2f5725, _0x3a096c = {};
        _0x3a096c[_0x24e619(0x186)] = function (_0x196e56, _0xa64e2b) {
            return _0x196e56 === _0xa64e2b;
        }, _0x3a096c[_0x24e619(0x184)] = _0x24e619(0x194), _0x3a096c[_0x24e619(0x17a)] = _0x24e619(0x1db) + _0x24e619(0x1ab);
        const _0x387735 = _0x3a096c;
        if (_0x387735[_0x24e619(0x186)](_0x13e921[_0x24e619(0x192)], -0x5d * 0x67 + 0x9d * -0x26 + -0x6 * -0xa1f)) {
            _0x471a0c[_0x24e619(0x1cf)]({
                'queueId': _0x13e921[_0x24e619(0x168)],
                'chatFlowId': null,
                'stepChatFlow': null,
                'botRetries': 0x0,
                'lastInteractionBot': new Date()
            });
            const _0x5c50be = {};
            _0x5c50be[_0x24e619(0x18e)] = _0x471a0c['id'], _0x5c50be[_0x24e619(0x163)] = _0x387735[_0x24e619(0x184)], _0x5c50be[_0x24e619(0x168)] = _0x13e921[_0x24e619(0x168)], await (-0xb0c + 0x235f * -0x1 + -0x33 * -0xe9, CreateLogTicketService_1[_0x24e619(0x1a3)])(_0x5c50be);
            _0x5c16a0?.[_0x24e619(0x1d5) + _0x24e619(0x15e)]?.[_0x24e619(0x18c) + _0x24e619(0x1ba) + 's'] && (await (0xba8 + 0x9a9 + -0x1551, DefinedUserBotService_1[_0x24e619(0x1a3)])(_0x471a0c, _0x13e921[_0x24e619(0x168)], _0x471a0c[_0x24e619(0x176)], _0x5c16a0?.[_0x24e619(0x1d5) + _0x24e619(0x15e)]?.[_0x24e619(0x18c) + _0x24e619(0x1ba) + 's']), _0x471a0c[_0x24e619(0x19f)]());
            const _0x5cf56b = {};
            _0x5cf56b[_0x24e619(0x176)] = _0x471a0c[_0x24e619(0x176)], _0x5cf56b[_0x24e619(0x163)] = _0x387735[_0x24e619(0x17a)], _0x5cf56b[_0x24e619(0x1d4)] = _0x471a0c, (-0x1242 + 0x66 * -0x1f + 0x1e9c, socketEmit_1[_0x24e619(0x1a3)])(_0x5cf56b);
            const _0x47c9d5 = await Queue_1[_0x24e619(0x1a3)][_0x24e619(0x19c)](_0x13e921[_0x24e619(0x168)]);
            if (_0x47c9d5[_0x24e619(0x18a)]) {
                const _0x9cb98b = {};
                _0x9cb98b[_0x24e619(0x167)] = !![], await _0x471a0c[_0x24e619(0x1cf)](_0x9cb98b);
            }
            await (-0x19 * 0x1f + -0x19e3 + 0x1cea, VerifyMensageOpenIAQueue_1[_0x24e619(0x1a3)])(_0x471a0c, _0x47c9d5, !![], !![]);
        }
    }, isUserDefine = async (_0x4b7c6a, _0x4b41f8, _0xeddd2e) => {
        const _0x3c228d = _0x2f5725, _0x15d124 = {};
        _0x15d124[_0x3c228d(0x16f)] = function (_0x4d7040, _0xca069) {
            return _0x4d7040 === _0xca069;
        }, _0x15d124[_0x3c228d(0x1c8)] = _0x3c228d(0x1e5), _0x15d124[_0x3c228d(0x1f1)] = _0x3c228d(0x1db) + _0x3c228d(0x1ab);
        const _0x2500b9 = _0x15d124;
        if (_0x2500b9[_0x3c228d(0x16f)](_0xeddd2e[_0x3c228d(0x192)], 0x24c + -0x1 * 0x81a + 0x5d0)) {
            await _0x4b7c6a[_0x3c228d(0x1cf)]({
                'userId': _0xeddd2e[_0x3c228d(0x15b) + _0x3c228d(0x18d)],
                'chatFlowId': null,
                'stepChatFlow': null,
                'botRetries': 0x0,
                'is_chat_ia': ![],
                'lastInteractionBot': new Date()
            }), await _0x4b7c6a[_0x3c228d(0x19f)]();
            const _0x3e445b = {};
            _0x3e445b[_0x3c228d(0x1c6)] = _0xeddd2e[_0x3c228d(0x15b) + _0x3c228d(0x18d)], _0x3e445b[_0x3c228d(0x18e)] = _0x4b7c6a['id'], _0x3e445b[_0x3c228d(0x163)] = _0x2500b9[_0x3c228d(0x1c8)], await (0x1 * 0x139f + 0x198f + -0x2d2e * 0x1, CreateLogTicketService_1[_0x3c228d(0x1a3)])(_0x3e445b);
            const _0x5ae1d3 = {};
            _0x5ae1d3[_0x3c228d(0x176)] = _0x4b7c6a[_0x3c228d(0x176)], _0x5ae1d3[_0x3c228d(0x163)] = _0x2500b9[_0x3c228d(0x1f1)], _0x5ae1d3[_0x3c228d(0x1d4)] = _0x4b7c6a, (-0xa * -0x23f + 0x62b * -0x4 + -0x2 * -0x11b, socketEmit_1[_0x3c228d(0x1a3)])(_0x5ae1d3);
        }
    }, sendWelcomeMessage = async (_0x5f4868, _0x182c1f) => {
        const _0x51c686 = _0x2f5725, _0x33d148 = {};
        _0x33d148[_0x51c686(0x158)] = _0x51c686(0x1fb), _0x33d148[_0x51c686(0x1a2)] = _0x51c686(0x1d2);
        const _0x47db13 = _0x33d148;
        if (_0x182c1f?.[_0x51c686(0x1d5) + _0x51c686(0x15e)]?.[_0x51c686(0x1e8) + _0x51c686(0x164)]?.[_0x51c686(0x1f3)]) {
            const _0x1e2a70 = {};
            _0x1e2a70[_0x51c686(0x1e7)] = _0x182c1f[_0x51c686(0x1d5) + _0x51c686(0x15e)]?.[_0x51c686(0x1e8) + _0x51c686(0x164)][_0x51c686(0x1f3)], _0x1e2a70[_0x51c686(0x18b)] = !![], _0x1e2a70[_0x51c686(0x1d0)] = !![], _0x1e2a70[_0x51c686(0x1a1)] = _0x47db13[_0x51c686(0x158)];
            const _0x2f4d06 = _0x1e2a70, _0x591506 = {};
            _0x591506[_0x51c686(0x1b3)] = _0x2f4d06, _0x591506[_0x51c686(0x176)] = _0x5f4868[_0x51c686(0x176)], _0x591506[_0x51c686(0x1c3)] = _0x5f4868, _0x591506[_0x51c686(0x1a1)] = _0x2f4d06[_0x51c686(0x1a1)], _0x591506[_0x51c686(0x1a8)] = _0x47db13[_0x51c686(0x1a2)], await (0x1118 + -0x2 * -0xd6c + 0x10 * -0x2bf, CreateMessageSystemService_1[_0x51c686(0x1a3)])(_0x591506);
        }
    }, isRetriesLimit = async (_0x5ebf99, _0xf94e4a) => {
        const _0x3d5810 = _0x2f5725, _0x17440b = {
                'aTXjo': function (_0x45be80, _0x303e69) {
                    return _0x45be80 >= _0x303e69;
                },
                'nXGAB': function (_0x5dadf1, _0x10a9d6) {
                    return _0x5dadf1 - _0x10a9d6;
                },
                'TNLMt': function (_0x532b19, _0x48bbaf) {
                    return _0x532b19 === _0x48bbaf;
                },
                'whFcA': _0x3d5810(0x191) + _0x3d5810(0x165),
                'ZgZHP': _0x3d5810(0x191) + _0x3d5810(0x1ac) + 'ne',
                'FQert': function (_0x4e06a7, _0x126a90) {
                    return _0x4e06a7 === _0x126a90;
                },
                'VIvVM': _0x3d5810(0x1db) + _0x3d5810(0x1ab),
                'CQkhU': function (_0x2b22eb, _0x37bb53, _0x43d2bb) {
                    return _0x2b22eb(_0x37bb53, _0x43d2bb);
                }
            }, _0x4af94e = _0xf94e4a?.[_0x3d5810(0x1d5) + _0x3d5810(0x15e)]?.[_0x3d5810(0x159) + _0x3d5810(0x157)]?.[_0x3d5810(0x1e1)];
        if (_0xf94e4a?.[_0x3d5810(0x1d5) + _0x3d5810(0x15e)]?.[_0x3d5810(0x159) + _0x3d5810(0x157)] && _0x4af94e && _0x17440b[_0x3d5810(0x15c)](_0x5ebf99[_0x3d5810(0x1dd)], _0x17440b[_0x3d5810(0x17f)](_0x4af94e, 0x1 * 0x3eb + 0xf93 * 0x2 + -0x2310))) {
            const _0x14370e = _0xf94e4a[_0x3d5810(0x1d5) + _0x3d5810(0x15e)][_0x3d5810(0x159) + _0x3d5810(0x157)][_0x3d5810(0x163)], {destiny: _0x4212b5} = _0xf94e4a[_0x3d5810(0x1d5) + _0x3d5810(0x15e)][_0x3d5810(0x159) + _0x3d5810(0x157)], _0x154412 = {
                    'chatFlowId': null,
                    'stepChatFlow': null,
                    'botRetries': 0x0,
                    'lastInteractionBot': new Date()
                }, _0x61d286 = {
                    'ticketId': _0x5ebf99['id'],
                    'type': _0x17440b[_0x3d5810(0x1c4)](_0x14370e, -0x1e5 * 0x2 + 0x245c * 0x1 + -0x2091) ? _0x17440b[_0x3d5810(0x1e4)] : _0x17440b[_0x3d5810(0x1ce)]
                };
            _0x17440b[_0x3d5810(0x1c4)](_0x14370e, -0x128d + -0x1615 + 0x28a3) && (_0x154412[_0x3d5810(0x168)] = _0x4212b5, _0x61d286[_0x3d5810(0x168)] = _0x4212b5);
            _0x17440b[_0x3d5810(0x180)](_0x14370e, 0x49 * 0x86 + 0x1685 + -0xc25 * 0x5) && (_0x154412[_0x3d5810(0x1c6)] = _0x4212b5, _0x61d286[_0x3d5810(0x1c6)] = _0x4212b5);
            _0x5ebf99[_0x3d5810(0x1cf)](_0x154412);
            const _0x34f9ec = {};
            return _0x34f9ec[_0x3d5810(0x176)] = _0x5ebf99[_0x3d5810(0x176)], _0x34f9ec[_0x3d5810(0x163)] = _0x17440b[_0x3d5810(0x172)], _0x34f9ec[_0x3d5810(0x1d4)] = _0x5ebf99, (0x34 * -0xa7 + -0xd6b + 0x2f57, socketEmit_1[_0x3d5810(0x1a3)])(_0x34f9ec), await (0x1975 + 0x4 * -0x265 + -0xfe1, CreateLogTicketService_1[_0x3d5810(0x1a3)])(_0x61d286), await _0x17440b[_0x3d5810(0x179)](sendWelcomeMessage, _0x5ebf99, _0xf94e4a), !![];
        }
        return ![];
    }, isAnswerCloseTicket = async (_0x9f6b90, _0x1a2d72, _0x467a9a) => {
        const _0x12027c = _0x2f5725, _0x2b57af = {
                'bdueB': function (_0x607cdd, _0x5820aa) {
                    return _0x607cdd === _0x5820aa;
                },
                'LMCcL': function (_0x8c41c9, _0x5c6a98) {
                    return _0x8c41c9(_0x5c6a98);
                },
                'TXygO': function (_0x4f8a38, _0x6e4c80) {
                    return _0x4f8a38(_0x6e4c80);
                },
                'jacus': function (_0x4c2ff2, _0x4feb3) {
                    return _0x4c2ff2 < _0x4feb3;
                },
                'wJvVS': _0x12027c(0x1e2),
                'jdeet': _0x12027c(0x1a7),
                'ronGO': _0x12027c(0x1db) + _0x12027c(0x1ab)
            };
        if (!_0x9f6b90?.[_0x12027c(0x1d5) + _0x12027c(0x15e)]?.[_0x12027c(0x1c7) + _0x12027c(0x16c)] || _0x2b57af[_0x12027c(0x1be)](_0x9f6b90?.[_0x12027c(0x1d5) + _0x12027c(0x15e)]?.[_0x12027c(0x1c7) + _0x12027c(0x16c)]?.[_0x12027c(0x1fd)], 0x1c95 * -0x1 + 0x76 * -0x4f + 0x4100))
            return ![];
        const _0x103ae7 = _0x9f6b90[_0x12027c(0x1d5) + _0x12027c(0x15e)][_0x12027c(0x1c7) + _0x12027c(0x16c)][_0x12027c(0x19e)](_0x334e9e => {
            const _0x36a88c = _0x12027c;
            return _0x2b57af[_0x36a88c(0x1ca)](_0x2b57af[_0x36a88c(0x1cd)](String, _0x334e9e)[_0x36a88c(0x1df) + 'e']()[_0x36a88c(0x16e)](), _0x2b57af[_0x36a88c(0x1f8)](String, _0x467a9a)[_0x36a88c(0x1df) + 'e']()[_0x36a88c(0x16e)]());
        });
        if (_0x103ae7) {
            await _0x1a2d72[_0x12027c(0x1cf)]({
                'chatFlowId': null,
                'stepChatFlow': null,
                'botRetries': 0x0,
                'lastInteractionBot': new Date(),
                'unreadMessages': 0x0,
                'answered': ![],
                'status': _0x2b57af[_0x12027c(0x173)]
            });
            const _0x2761b3 = {};
            _0x2761b3[_0x12027c(0x18e)] = _0x1a2d72['id'], _0x2761b3[_0x12027c(0x163)] = _0x2b57af[_0x12027c(0x1a5)], await (-0x2d7 + -0x1bd7 * -0x1 + -0x320 * 0x8, CreateLogTicketService_1[_0x12027c(0x1a3)])(_0x2761b3);
            const _0x283fd6 = {};
            return _0x283fd6[_0x12027c(0x176)] = _0x1a2d72[_0x12027c(0x176)], _0x283fd6[_0x12027c(0x163)] = _0x2b57af[_0x12027c(0x182)], _0x283fd6[_0x12027c(0x1d4)] = _0x1a2d72, (-0x4 * 0x48a + -0x2093 + -0x9 * -0x5a3, socketEmit_1[_0x12027c(0x1a3)])(_0x283fd6), !![];
        }
        return ![];
    }, VerifyStepsChatFlowTicket = async (_0x1415e5, _0x1fee09) => {
        const _0x51e928 = _0x2f5725, _0x158ac8 = {
                'obFhg': function (_0x24bd6b, _0x35aeb8) {
                    return _0x24bd6b === _0x35aeb8;
                },
                'JSOGy': function (_0x404077, _0x2dd778) {
                    return _0x404077(_0x2dd778);
                },
                'AdGCQ': _0x51e928(0x1d2),
                'DKKZw': function (_0x1a308e, _0x4810a9, _0x5ad656, _0x2ae790) {
                    return _0x1a308e(_0x4810a9, _0x5ad656, _0x2ae790);
                },
                'plEGx': _0x51e928(0x1aa) + '2',
                'MefkT': function (_0x20a589, _0x54fae9, _0x2b48c9, _0x25bf7e, _0x4b3679) {
                    return _0x20a589(_0x54fae9, _0x2b48c9, _0x25bf7e, _0x4b3679);
                },
                'OZiSY': _0x51e928(0x1db) + _0x51e928(0x1ab),
                'tjKuw': function (_0x33c9a2, _0x2b880b) {
                    return _0x33c9a2 === _0x2b880b;
                },
                'AJTXb': function (_0x27edb8, _0x50b57e, _0x4c8b29) {
                    return _0x27edb8(_0x50b57e, _0x4c8b29);
                },
                'talsq': _0x51e928(0x15a) + _0x51e928(0x16d) + _0x51e928(0x190) + _0x51e928(0x195) + _0x51e928(0x1a0) + _0x51e928(0x1fa) + _0x51e928(0x1ae) + _0x51e928(0x199) + _0x51e928(0x1ef),
                'WYZyJ': _0x51e928(0x1fb),
                'SMywA': function (_0x1eef8e, _0xfaf7a3) {
                    return _0x1eef8e + _0xfaf7a3;
                }
            };
        let _0x45a7cd;
        if (_0x1fee09[_0x51e928(0x1b6)] && _0x158ac8[_0x51e928(0x1e9)](_0x1fee09[_0x51e928(0x1a8)], _0x158ac8[_0x51e928(0x19d)]) && !_0x1415e5[_0x51e928(0x170)][_0x51e928(0x18b)] && !_0x1fee09[_0x51e928(0x1a4)] && !_0x1fee09[_0x51e928(0x183)]) {
            if (_0x1fee09[_0x51e928(0x1b6)]) {
                const _0x45455e = await _0x1fee09[_0x51e928(0x1f7) + 'w']();
                _0x45455e[_0x51e928(0x1ea) + 'te'] && (_0x45a7cd = _0x45455e[_0x51e928(0x1ea) + 'te'][_0x51e928(0x17b)](/\s/g, ''));
                const _0x3a6704 = _0x45455e[_0x51e928(0x171)][_0x51e928(0x1cb)][_0x51e928(0x19e)](_0x2d310a => _0x2d310a['id'] === _0x1fee09[_0x51e928(0x1b2) + 'ow']), _0xf359ec = _0x45455e[_0x51e928(0x171)][_0x51e928(0x1cb)][_0x51e928(0x19e)](_0x527963 => _0x527963[_0x51e928(0x163)] === _0x51e928(0x1d5) + _0x51e928(0x15e)), _0x13f0f9 = await (0x1de0 + 0x1 * 0x206d + -0x3e4d, VerifyContactBaileys_1[_0x51e928(0x1eb) + _0x51e928(0x164)])(_0x1415e5), _0x43c32c = _0x3a6704[_0x51e928(0x1fe)][_0x51e928(0x19e)](_0x1f5cc1 => {
                        const _0x34e6dc = _0x51e928;
                        if (_0x158ac8[_0x34e6dc(0x1e9)](_0x1f5cc1[_0x34e6dc(0x163)], 'US'))
                            return !![];
                        const _0x30677b = _0x1f5cc1[_0x34e6dc(0x1a6)][_0x34e6dc(0x17c)](_0x55758f => String(_0x55758f)[_0x34e6dc(0x1df) + 'e']()[_0x34e6dc(0x16e)]()), _0x41704d = _0x158ac8[_0x34e6dc(0x1bc)](String, _0x13f0f9)[_0x34e6dc(0x1df) + 'e']()[_0x34e6dc(0x16e)]();
                        return _0x30677b[_0x34e6dc(0x1b1)](_0x41704d);
                    });
                if (!_0x1fee09[_0x51e928(0x1e0)] && await _0x158ac8[_0x51e928(0x1f5)](isAnswerCloseTicket, _0xf359ec, _0x1fee09, _0x13f0f9))
                    return;
                if (_0x43c32c && !_0x1fee09[_0x51e928(0x1e0)]) {
                    const _0xcf802c = _0x158ac8[_0x51e928(0x1d1)][_0x51e928(0x1ee)]('|');
                    let _0x91661f = -0x443 * 0x2 + 0x6c + 0x81a;
                    while (!![]) {
                        switch (_0xcf802c[_0x91661f++]) {
                        case '0':
                            await _0x158ac8[_0x51e928(0x1cc)](isQueueDefine, _0x1fee09, _0xf359ec, _0x3a6704, _0x43c32c);
                            continue;
                        case '1':
                            const _0x58bb1b = {};
                            _0x58bb1b[_0x51e928(0x176)] = _0x1fee09[_0x51e928(0x176)], _0x58bb1b[_0x51e928(0x163)] = _0x158ac8[_0x51e928(0x1dc)], _0x58bb1b[_0x51e928(0x1d4)] = _0x1fee09, (-0xb * 0x31d + 0x6a7 * 0x3 + -0x76 * -0x1f, socketEmit_1[_0x51e928(0x1a3)])(_0x58bb1b);
                            continue;
                        case '2':
                            (_0x158ac8[_0x51e928(0x1d6)](_0x43c32c[_0x51e928(0x192)], 0x527 * -0x1 + 0x66f * 0x1 + -0x1 * 0x147) || _0x158ac8[_0x51e928(0x1d6)](_0x43c32c[_0x51e928(0x192)], -0x738 + -0x3 * 0x334 + 0x86b * 0x2)) && await _0x158ac8[_0x51e928(0x1b7)](sendWelcomeMessage, _0x1fee09, _0xf359ec);
                            continue;
                        case '3':
                            if (await (-0x79 * -0x2f + -0x1 * -0x1183 + -0x153 * 0x1e, IsContactTest_1[_0x51e928(0x1a3)])(_0x1fee09[_0x51e928(0x1e6)][_0x51e928(0x1e1)], _0x45a7cd, _0x1fee09[_0x51e928(0x1bf)]))
                                return;
                            continue;
                        case '4':
                            await _0x158ac8[_0x51e928(0x1f5)](isUserDefine, _0x1fee09, _0x3a6704, _0x43c32c);
                            continue;
                        case '5':
                            await _0x158ac8[_0x51e928(0x1cc)](isNextSteps, _0x1fee09, _0x45455e, _0x3a6704, _0x43c32c);
                            continue;
                        }
                        break;
                    }
                } else {
                    if (await (-0x1a6 + -0x1cdf * -0x1 + -0x1b39, IsContactTest_1[_0x51e928(0x1a3)])(_0x1fee09[_0x51e928(0x1e6)][_0x51e928(0x1e1)], _0x45a7cd, _0x1fee09[_0x51e928(0x1bf)]))
                        return;
                    if (!_0x1fee09[_0x51e928(0x1e0)]) {
                        if (await _0x158ac8[_0x51e928(0x1b7)](isRetriesLimit, _0x1fee09, _0xf359ec))
                            return;
                        const _0x3abc8a = {};
                        _0x3abc8a[_0x51e928(0x1e7)] = _0xf359ec[_0x51e928(0x1d5) + _0x51e928(0x15e)][_0x51e928(0x1a9) + _0x51e928(0x166) + _0x51e928(0x1b5)][_0x51e928(0x1f3)] || _0x158ac8[_0x51e928(0x1bb)], _0x3abc8a[_0x51e928(0x18b)] = !![], _0x3abc8a[_0x51e928(0x1d0)] = !![], _0x3abc8a[_0x51e928(0x1a1)] = _0x158ac8[_0x51e928(0x16b)];
                        const _0x314b0e = _0x3abc8a, _0x5af094 = {};
                        _0x5af094[_0x51e928(0x1b3)] = _0x314b0e, _0x5af094[_0x51e928(0x176)] = _0x1fee09[_0x51e928(0x176)], _0x5af094[_0x51e928(0x1c3)] = _0x1fee09, _0x5af094[_0x51e928(0x1a1)] = _0x314b0e[_0x51e928(0x1a1)], _0x5af094[_0x51e928(0x1a8)] = _0x158ac8[_0x51e928(0x19d)], await (-0x848 + 0x12bc + -0x1 * 0xa74, CreateMessageSystemService_1[_0x51e928(0x1a3)])(_0x5af094), await _0x1fee09[_0x51e928(0x1cf)]({
                            'botRetries': _0x158ac8[_0x51e928(0x19a)](_0x1fee09[_0x51e928(0x1dd)], -0xf56 + -0xc2a + 0x1b81),
                            'lastInteractionBot': new Date()
                        });
                    }
                    for (const _0x31c8f7 of _0x3a6704[_0x51e928(0x1bd) + 'ns']) {
                        const _0x2cc46e = {};
                        _0x2cc46e[_0x51e928(0x1b3)] = _0x31c8f7, _0x2cc46e[_0x51e928(0x176)] = _0x1fee09[_0x51e928(0x176)], _0x2cc46e[_0x51e928(0x1c3)] = _0x1fee09, await (0x241b + -0xa3d * -0x3 + -0x1 * 0x42d2, BuildSendMessageService_1[_0x51e928(0x1a3)])(_0x2cc46e);
                    }
                }
                await (-0x2288 + -0x1277 + 0x34ff, SetTicketMessagesAsRead_1[_0x51e928(0x1a3)])(_0x1fee09);
            }
        }
    };
function _0x5bb3() {
    const _0x1fc54b = [
        'ice',
        'Emit',
        '../../help',
        '248PenVjW',
        'ticket:upd',
        'OZiSY',
        'botRetries',
        'erty',
        'toLowerCas',
        'isCreated',
        'number',
        'closed',
        '23990AfyFNy',
        'whFcA',
        'userDefine',
        'contact',
        'body',
        'welcomeMes',
        'obFhg',
        'celularTes',
        'getBodyMes',
        'ers/SetTic',
        '../TicketS',
        'split',
        'lida.',
        'ueue',
        'dPtzy',
        'ers/socket',
        'message',
        'fault',
        'DKKZw',
        './../../mo',
        'getChatFlo',
        'TXygO',
        '5149746DSJFRZ',
        'ovamente!\x20',
        'bot',
        'IGDAQ',
        'length',
        'conditions',
        'tMessage',
        'pLpVL',
        'maxRetryBo',
        'Desculpe!\x20',
        'userIdDest',
        'aTXjo',
        'dels/Queue',
        'ions',
        'tTest',
        '889110uTTFSu',
        '../WbotSer',
        '80127gyfwRN',
        'type',
        'sage',
        'itQueue',
        'SelectMess',
        'is_chat_ia',
        'queueId',
        '893820kdGoEq',
        '../Message',
        'WYZyJ',
        'eTicket',
        'Não\x20entend',
        'trim',
        'cfgqB',
        'key',
        'flow',
        'VIvVM',
        'wJvVS',
        'rvice',
        'ketService',
        'tenantId',
        'ageOpenIAQ',
        'dMessageSe',
        'CQkhU',
        'jQqcy',
        'replace',
        'map',
        './DefinedU',
        'ervices/Cr',
        'nXGAB',
        'FQert',
        'VerifyMens',
        'ronGO',
        'answered',
        'IZsnM',
        '557452IUWgzx',
        'uqNSo',
        'value',
        'defineProp',
        'ers/Verify',
        'from_ia',
        'fromMe',
        'autoDistri',
        'ination',
        'ticketId',
        'ketMessage',
        'i\x20sua\x20resp',
        'retriesLim',
        'action',
        '__esModule',
        'queue',
        'osta.\x20Vamo',
        'vices/help',
        'sAsRead',
        './IsContac',
        'a\x20opção\x20vá',
        'SMywA',
        'Services/C',
        'findByPk',
        'AdGCQ',
        'find',
        'reload',
        's\x20tentar\x20n',
        'sendType',
        'gnVUq',
        'default',
        'isGroup',
        'jdeet',
        'condition',
        'autoClose',
        'status',
        'notOptions',
        '3|5|0|4|1|',
        'ate',
        'itUserDefi',
        'geSystemSe',
        'Escolha\x20um',
        '1256qHswuk',
        'ContactBai',
        'includes',
        'stepChatFl',
        'msg',
        '__importDe',
        'age',
        'chatFlowId',
        'AJTXb',
        'leys',
        '200532MmTbgD',
        'buteTicket',
        'talsq',
        'JSOGy',
        'interactio',
        'jacus',
        'channel',
        './BuildSen',
        '../OpenIA/',
        'nextStepId',
        'ticket',
        'TNLMt',
        'eateLogTic',
        'userId',
        'answerClos',
        'fpVDH',
        'reateMessa',
        'bdueB',
        'nodeList',
        'MefkT',
        'LMCcL',
        'ZgZHP',
        'update',
        'read',
        'plEGx',
        'pending',
        'serBotServ',
        'payload',
        'configurat',
        'tjKuw'
    ];
    _0x5bb3 = function () {
        return _0x1fc54b;
    };
    return _0x5bb3();
}
function _0xd189(_0x1d3bd5, _0x132f0c) {
    const _0xc11a6a = _0x5bb3();
    return _0xd189 = function (_0x396b4c, _0x2b7301) {
        _0x396b4c = _0x396b4c - (-0x4cb * -0x3 + 0x2060 + -0x2d6a);
        let _0x27c980 = _0xc11a6a[_0x396b4c];
        return _0x27c980;
    }, _0xd189(_0x1d3bd5, _0x132f0c);
}
exports[_0x2f5725(0x1a3)] = VerifyStepsChatFlowTicket;