'use strict';const n=b,o=b;function a(){const r=['sequelize','16uoWOHK','3842901SgfxWD','default','7029414GnIJbD','../../database','99595mPvOKq','248OVsyqR','QueryTypes','defineProperty','697750luFmaM','query','9085937jFBmWt','\x0a\x20\x20select\x20label,\x20qtd,\x20ROUND(100.0*(qtd/sum(qtd)\x20over\x20()),\x202)\x20pertentual\x20\x20from\x20(\x0a\x20\x20select\x0a\x20\x20t.channel\x20as\x20label,\x0a\x20\x20count(1)\x20as\x20qtd\x0a\x20\x20from\x20\x22Tickets\x22\x20t\x0a\x20\x20where\x20t.\x22tenantId\x22\x20=\x20:tenantId\x20AND\x20t.\x22userId\x22\x20=\x20:userId\x0a\x20\x20and\x20date_trunc(\x27day\x27,\x20t.\x22createdAt\x22)\x20between\x20:startDate\x20and\x20:endDate\x0a\x20\x20group\x20by\x20t.channel\x0a\x20\x20)\x20a\x0a\x20\x20order\x20by\x202\x20Desc\x0a','4647603aEsXAo','1611515jCVmmg','__esModule','\x0a\x20\x20select\x20label,\x20qtd,\x20ROUND(100.0*(qtd/sum(qtd)\x20over\x20()),\x202)\x20pertentual\x20\x20from\x20(\x0a\x20\x20select\x0a\x20\x20t.channel\x20as\x20label,\x0a\x20\x20count(1)\x20as\x20qtd\x0a\x20\x20from\x20\x22Tickets\x22\x20t\x0a\x20\x20where\x20t.\x22tenantId\x22\x20=\x20:tenantId\x0a\x20\x20and\x20date_trunc(\x27day\x27,\x20t.\x22createdAt\x22)\x20between\x20:startDate\x20and\x20:endDate\x0a\x20\x20group\x20by\x20t.channel\x0a\x20\x20)\x20a\x0a\x20\x20order\x20by\x202\x20Desc\x0a'];a=function(){return r;};return a();}(function(c,d){const k=b,l=b,e=c();while(!![]){try{const f=parseInt(k(0x100))/0x1+parseInt(l(0xfb))/0x2+-parseInt(l(0xff))/0x3+-parseInt(l(0x10a))/0x4*(-parseInt(k(0x109))/0x5)+-parseInt(k(0x107))/0x6+parseInt(l(0xfd))/0x7+parseInt(l(0x104))/0x8*(-parseInt(k(0x105))/0x9);if(f===d)break;else e['push'](e['shift']());}catch(g){e['push'](e['shift']());}}}(a,0xe0453));var __importDefault=this&&this['__importDefault']||function(c){const m=b;return c&&c[m(0x101)]?c:{'default':c};};Object[n(0xfa)](exports,n(0x101),{'value':!![]});function b(c,d){const e=a();return b=function(f,g){f=f-0xfa;let h=e[f];return h;},b(c,d);}const sequelize_1=require(o(0x103)),database_1=__importDefault(require(n(0x108))),queryAdmin=o(0x102),query=n(0xfe),DashTicketsChannels=async({startDate:c,endDate:d,tenantId:e,userId:f,userProfile:g})=>{const p=n,q=o,h=await database_1[p(0x106)][p(0xfc)](g=='admin'?queryAdmin:query,{'replacements':{'tenantId':e,'startDate':c,'endDate':d,'userId':f},'type':sequelize_1[q(0x10b)]['SELECT']});return h;};exports[o(0x106)]=DashTicketsChannels;