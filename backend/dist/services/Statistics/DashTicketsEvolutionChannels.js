'use strict';
function _0x1728() {
    const _0x2a90fd = [
        'rtDate\x20and',
        'receivedTr',
        'default',
        '\x22type\x22\x20LIK',
        'tween\x20:sta',
        'm\x20(\x0a\x20\x20sele',
        'edAt\x22),\x20t.',
        'erty',
        ')\x20a\x0a\x20\x20orde',
        ',\x20t.\x22creat',
        't.channel\x20',
        'to_char(da',
        'YYY\x27)\x20,\x0a\x20\x20',
        't.\x22ticketI',
        '\x22\x20=\x20:userI',
        '\x27,\x20t.\x22crea',
        'admin',
        'value',
        ')\x0a\x20\x20and\x20da',
        'from\x20\x22Tick',
        '\x20(lt.\x22type',
        '_referenci',
        '1896JFfFdR',
        'ct\x0a\x20\x20date_',
        '/YYYY\x27)\x20dt',
        '\x20\x20group\x20by',
        '\x0a\x20\x20order\x20b',
        'te_trunc(\x27',
        '16eBnyzr',
        'sequelize',
        'TuYvz',
        '\x22LogTicket',
        ')\x20over\x20())',
        '2211825aDgXFS',
        'ansfer\x27)\x0a\x20',
        '1282421FPUgOI',
        '33110zvbean',
        'replacemen',
        '25810THFGDZ',
        '\x20as\x20qtd\x0a\x20\x20',
        'y\x201\x0a',
        'ef,\x20\x27DD/MM',
        'ntId\x20\x20AND\x20',
        't.\x22type\x22\x20L',
        'BbcRx',
        ',\x20\x27DD/MM/Y',
        '../../data',
        'nnel\x0a\x20\x20)\x20a',
        '3353994BZCTVr',
        '\x22\x0a\x20\x20where\x20',
        'pe\x22\x20LIKE\x20\x27',
        'IKE\x20\x27open\x27',
        'reatedAt\x22)',
        'te\x0a\x20\x20group',
        'query',
        '\x20by\x20date_t',
        '__importDe',
        'startDate',
        '\x20date_trun',
        'and\x20:endDa',
        '__esModule',
        's\x22\x20lt\x20ON\x20l',
        'runc(\x27day\x27',
        'td/sum(qtd',
        '_char(dt_r',
        'tedAt\x22)\x20dt',
        '\x20\x20count(1)',
        'D(100.0*(q',
        '\x0a\x20\x20select\x20',
        'day\x27,\x20t.\x22c',
        'en\x27\x20OR\x20lt.',
        'ntId\x0a\x20\x20and',
        'E\x20\x27receive',
        'NNER\x20JOIN\x20',
        ',\x202)\x20perte',
        'startDate\x20',
        '_ref,\x0a\x20\x20--',
        'type',
        't.\x22tenantI',
        'tenantId',
        'channel\x0a\x20\x20',
        'QueryTypes',
        'r\x20by\x201\x0a',
        'c(\x27day\x27,\x20t',
        'fault',
        '\x20OR\x20lt.\x22ty',
        'd\x22\x20=\x20t.\x22id',
        '\x20and\x20date_',
        '\x22\x20LIKE\x20\x27op',
        'ntual\x20\x20fro',
        'base',
        'a\x20,\x20label,',
        'defineProp',
        '.\x22createdA',
        'lt.\x22userId',
        'dt_ref,\x20to',
        '424uvxUIr',
        '\x20qtd,\x20ROUN',
        'endDate',
        'tedAt\x22)\x20be',
        'as\x20label,\x0a',
        'dTransfer\x27',
        'ets\x22\x20t\x0a\x20\x20I',
        't\x22),\x20t.cha',
        '52144790eftaMu',
        '\x20:endDate\x0a',
        '\x20between\x20:',
        '5415939uVxRev',
        'd\x22\x20=\x20:tena',
        'trunc(\x27day',
        'SELECT',
        'd\x0a\x20\x20and\x20(l',
        'userId'
    ];
    _0x1728 = function () {
        return _0x2a90fd;
    };
    return _0x1728();
}
const _0x3043e7 = _0x1250;
function _0x1250(_0x47c35e, _0x5204b2) {
    const _0x431fec = _0x1728();
    return _0x1250 = function (_0xf7ff28, _0x5761ad) {
        _0xf7ff28 = _0xf7ff28 - (-0x1c18 + 0xfd2 + -0x339 * -0x4);
        let _0x323130 = _0x431fec[_0xf7ff28];
        return _0x323130;
    }, _0x1250(_0x47c35e, _0x5204b2);
}
(function (_0x4c9fde, _0x40dd79) {
    const _0x3da230 = _0x1250, _0x316206 = _0x4c9fde();
    while (!![]) {
        try {
            const _0x24871e = -parseInt(_0x3da230(0xa6)) / (0x4b3 * -0x2 + -0x17f4 + 0x215b) + -parseInt(_0x3da230(0xb3)) / (-0x3 * 0x5c3 + 0xef * 0x1 + -0x6 * -0x2ba) + parseInt(_0x3da230(0xa4)) / (0x2 * -0x1382 + -0x52e + 0x2c35) + -parseInt(_0x3da230(0xe3)) / (0x13 * -0x169 + -0x783 + 0x2e * 0xbf) * (-parseInt(_0x3da230(0xa9)) / (-0x467 * 0x6 + -0xf4d + 0x29bc)) + parseInt(_0x3da230(0x10a)) / (-0x2587 + -0x56a + 0x2af7) * (-parseInt(_0x3da230(0xa7)) / (0x767 * -0x5 + -0x44f * -0x9 + -0x1bd)) + -parseInt(_0x3da230(0x9f)) / (-0x177e + 0x1 * -0x2ce + -0x151 * -0x14) * (parseInt(_0x3da230(0xee)) / (0x14 * -0x13d + -0x1815 + -0x1 * -0x30e2)) + parseInt(_0x3da230(0xeb)) / (-0x1aed + 0x4 * 0x2a5 + 0x1063 * 0x1);
            if (_0x24871e === _0x40dd79)
                break;
            else
                _0x316206['push'](_0x316206['shift']());
        } catch (_0x21afba) {
            _0x316206['push'](_0x316206['shift']());
        }
    }
}(_0x1728, -0x1 * -0xc7794 + 0x5fd * -0x2ab + 0x1058b1));
var __importDefault = this && this[_0x3043e7(0xbb) + _0x3043e7(0xd7)] || function (_0x452c04) {
    const _0x28145b = _0x3043e7;
    return _0x452c04 && _0x452c04[_0x28145b(0xbf)] ? _0x452c04 : { 'default': _0x452c04 };
};
const _0x17264c = {};
_0x17264c[_0x3043e7(0x105)] = !![], Object[_0x3043e7(0xdf) + _0x3043e7(0xfb)](exports, _0x3043e7(0xbf), _0x17264c);
const sequelize_1 = require(_0x3043e7(0xa0)), database_1 = __importDefault(require(_0x3043e7(0xb1) + _0x3043e7(0xdd))), query = _0x3043e7(0xc7) + _0x3043e7(0xe2) + _0x3043e7(0xc3) + _0x3043e7(0xac) + _0x3043e7(0x10c) + _0x3043e7(0x109) + _0x3043e7(0xde) + _0x3043e7(0xe4) + _0x3043e7(0xc6) + _0x3043e7(0xc2) + _0x3043e7(0xa3) + _0x3043e7(0xcd) + _0x3043e7(0xdc) + _0x3043e7(0xf9) + _0x3043e7(0x10b) + _0x3043e7(0xf0) + _0x3043e7(0x103) + _0x3043e7(0xc4) + _0x3043e7(0xcf) + _0x3043e7(0xff) + _0x3043e7(0x9e) + _0x3043e7(0xc8) + _0x3043e7(0xb7) + _0x3043e7(0xb0) + _0x3043e7(0x100) + _0x3043e7(0xfe) + _0x3043e7(0xe7) + _0x3043e7(0xc5) + _0x3043e7(0xaa) + _0x3043e7(0x107) + _0x3043e7(0xe9) + _0x3043e7(0xcc) + _0x3043e7(0xa2) + _0x3043e7(0xc0) + _0x3043e7(0x101) + _0x3043e7(0xd9) + _0x3043e7(0xb4) + _0x3043e7(0xd1) + _0x3043e7(0xef) + _0x3043e7(0xad) + _0x3043e7(0xe1) + _0x3043e7(0x102) + _0x3043e7(0xf2) + _0x3043e7(0xae) + _0x3043e7(0xb6) + _0x3043e7(0xd8) + _0x3043e7(0xb5) + _0x3043e7(0xf5) + _0x3043e7(0xa5) + _0x3043e7(0xda) + _0x3043e7(0xf0) + _0x3043e7(0x103) + _0x3043e7(0xe6) + _0x3043e7(0xf8) + _0x3043e7(0xf4) + _0x3043e7(0xec) + _0x3043e7(0x10d) + _0x3043e7(0xbd) + _0x3043e7(0xd6) + _0x3043e7(0xe0) + _0x3043e7(0xea) + _0x3043e7(0xb2) + _0x3043e7(0x10e) + _0x3043e7(0xab), queryAdmin = _0x3043e7(0xc7) + _0x3043e7(0xe2) + _0x3043e7(0xc3) + _0x3043e7(0xac) + _0x3043e7(0x10c) + _0x3043e7(0x109) + _0x3043e7(0xde) + _0x3043e7(0xe4) + _0x3043e7(0xc6) + _0x3043e7(0xc2) + _0x3043e7(0xa3) + _0x3043e7(0xcd) + _0x3043e7(0xdc) + _0x3043e7(0xf9) + _0x3043e7(0x10b) + _0x3043e7(0xf0) + _0x3043e7(0x103) + _0x3043e7(0xc4) + _0x3043e7(0xcf) + _0x3043e7(0xff) + _0x3043e7(0x9e) + _0x3043e7(0xc8) + _0x3043e7(0xb7) + _0x3043e7(0xb0) + _0x3043e7(0x100) + _0x3043e7(0xfe) + _0x3043e7(0xe7) + _0x3043e7(0xc5) + _0x3043e7(0xaa) + _0x3043e7(0x107) + _0x3043e7(0xe9) + _0x3043e7(0xcc) + _0x3043e7(0xa2) + _0x3043e7(0xc0) + _0x3043e7(0x101) + _0x3043e7(0xd9) + _0x3043e7(0xb4) + _0x3043e7(0xd1) + _0x3043e7(0xef) + _0x3043e7(0xca) + _0x3043e7(0x108) + _0x3043e7(0xdb) + _0x3043e7(0xc9) + _0x3043e7(0xf7) + _0x3043e7(0xcb) + _0x3043e7(0xe8) + _0x3043e7(0x106) + _0x3043e7(0x9e) + _0x3043e7(0xc8) + _0x3043e7(0xb7) + _0x3043e7(0xed) + _0x3043e7(0xce) + _0x3043e7(0xbe) + _0x3043e7(0xb8) + _0x3043e7(0xba) + _0x3043e7(0xc1) + _0x3043e7(0xfd) + _0x3043e7(0xfa) + _0x3043e7(0xd3) + _0x3043e7(0xfc) + _0x3043e7(0xd5), DashTicketsEvolutionChannels = async ({
        startDate: _0x3fac2a,
        endDate: _0x5bb643,
        tenantId: _0x51e482,
        userId: _0x38c5c7,
        userProfile: _0x4690a3
    }) => {
        const _0x16fb14 = _0x3043e7, _0x4ff991 = {};
        _0x4ff991[_0x16fb14(0xaf)] = function (_0x1bb7f6, _0x1e906a) {
            return _0x1bb7f6 == _0x1e906a;
        }, _0x4ff991[_0x16fb14(0xa1)] = _0x16fb14(0x104);
        const _0x3cf90e = _0x4ff991, _0x120d50 = {};
        _0x120d50[_0x16fb14(0xd2)] = _0x51e482, _0x120d50[_0x16fb14(0xbc)] = _0x3fac2a, _0x120d50[_0x16fb14(0xe5)] = _0x5bb643, _0x120d50[_0x16fb14(0xf3)] = _0x38c5c7;
        const _0x1b396f = {};
        _0x1b396f[_0x16fb14(0xa8) + 'ts'] = _0x120d50, _0x1b396f[_0x16fb14(0xd0)] = sequelize_1[_0x16fb14(0xd4)][_0x16fb14(0xf1)];
        const _0x4cf5ae = await database_1[_0x16fb14(0xf6)][_0x16fb14(0xb9)](_0x3cf90e[_0x16fb14(0xaf)](_0x4690a3, _0x3cf90e[_0x16fb14(0xa1)]) ? queryAdmin : query, _0x1b396f);
        return _0x4cf5ae;
    };
exports[_0x3043e7(0xf6)] = DashTicketsEvolutionChannels;