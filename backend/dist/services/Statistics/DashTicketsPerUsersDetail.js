'use strict';const m=b,o=b;(function(c,d){const k=b,l=b,e=c();while(!![]){try{const f=-parseInt(k(0xdf))/0x1*(-parseInt(k(0xd6))/0x2)+parseInt(l(0xcf))/0x3*(-parseInt(k(0xdc))/0x4)+parseInt(k(0xd7))/0x5+-parseInt(l(0xd1))/0x6*(-parseInt(k(0xd2))/0x7)+parseInt(k(0xd8))/0x8*(parseInt(l(0xe2))/0x9)+parseInt(l(0xda))/0xa*(parseInt(l(0xd0))/0xb)+-parseInt(k(0xe0))/0xc*(parseInt(l(0xdd))/0xd);if(f===d)break;else e['push'](e['shift']());}catch(g){e['push'](e['shift']());}}}(a,0x8c6c1));function a(){const r=['QueryTypes','__importDefault','query','2uwGHrd','1462035AsvrnO','814520lVrBcm','sequelize','9766580aDyceE','admin','4oQokZr','26zUmkrL','default','139136fNYMJz','5370312jJOELO','defineProperty','9tISmKa','__esModule','SELECT','\x0a\x20\x20\x20\x20select\x0a\x20\x20\x20\x20distinct(email),\x0a\x20\x20\x20\x20name,\x0a\x20\x20\x20\x20count(*)\x20FILTER\x20(where\x20t.status\x20=\x20\x27open\x27)\x20OVER\x20(PARTITION\x20by\x20email\x20)\x20as\x20qtd_em_atendimento,\x0a\x20\x20\x20\x20count(*)\x20FILTER\x20(where\x20t.status\x20=\x20\x27pending\x27)\x20OVER\x20(PARTITION\x20by\x20email)\x20as\x20qtd_pendentes,\x0a\x20\x20\x20\x20count(*)\x20FILTER\x20(where\x20t.status\x20=\x20\x27closed\x27)\x20OVER\x20(PARTITION\x20by\x20email\x20)\x20as\x20qtd_resolvidos,\x0a\x20\x20\x20\x20count(*)\x20OVER\x20(PARTITION\x20by\x20email)\x20as\x20qtd_por_usuario,\x0a\x20\x20\x20\x20--ROUND(MIN(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22closedAt\x22/1000),\x20t.\x22createdAt\x22)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20menor_tma,\x0a\x20\x20\x20\x20--ROUND(MAX(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22closedAt\x22/1000),\x20t.\x22createdAt\x22)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20maior_tma,\x0a\x20\x20\x20\x20concat(coalesce(ROUND(AVG(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22closedAt\x22/1000),\x20t.\x22createdAt\x22)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200),\x200),\x20\x27minutes\x27)::interval\x20tma,\x0a\x20\x20\x20\x20--ROUND(MIN(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22startedAttendanceAt\x22/1000),\x20t.\x22createdAt\x22::timestamp)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20menor_tme,\x0a\x20\x20\x20\x20--ROUND(MAX(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22startedAttendanceAt\x22/1000),\x20t.\x22createdAt\x22::timestamp)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20maior_tme,\x0a\x20\x20\x20\x20concat(coalesce(ROUND(AVG(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22startedAttendanceAt\x22/1000),\x20t.\x22createdAt\x22::timestamp)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200),\x200),\x20\x27minutes\x27)::interval\x20tme\x0a\x20\x20\x20\x20from\x20\x22Tickets\x22\x20t\x0a\x20\x20\x20\x20left\x20join\x20\x22Users\x22\x20u\x20on\x20t.\x22userId\x22\x20=\x20\x22u\x22.\x22id\x22\x0a\x20\x20\x20\x20left\x20join\x20\x22Queues\x22\x20q\x20on\x20q.id\x20\x20=\x20t.\x22queueId\x22\x0a\x20\x20\x20\x20where\x20t.\x22tenantId\x22\x20=\x20:tenantId\x0a\x20\x20\x20\x20and\x20date_trunc(\x27day\x27,\x20t.\x22createdAt\x22)\x20between\x20:startDate\x20and\x20:endDate\x0a\x20\x20\x20\x20order\x20by\x206\x20Desc\x0a','735366XlriER','11HblsOK','1231962ezrwss','7UHSsBy'];a=function(){return r;};return a();}var __importDefault=this&&this[m(0xd4)]||function(c){const n=m;return c&&c[n(0xcc)]?c:{'default':c};};Object[m(0xe1)](exports,o(0xcc),{'value':!![]});const sequelize_1=require(o(0xd9)),database_1=__importDefault(require('../../database')),query='\x0a\x20\x20\x20\x20select\x0a\x20\x20\x20\x20distinct(email),\x0a\x20\x20\x20\x20name,\x0a\x20\x20\x20\x20count(*)\x20FILTER\x20(where\x20t.status\x20=\x20\x27open\x27)\x20OVER\x20(PARTITION\x20by\x20email\x20)\x20as\x20qtd_em_atendimento,\x0a\x20\x20\x20\x20count(*)\x20FILTER\x20(where\x20t.status\x20=\x20\x27pending\x27)\x20OVER\x20(PARTITION\x20by\x20email)\x20as\x20qtd_pendentes,\x0a\x20\x20\x20\x20count(*)\x20FILTER\x20(where\x20t.status\x20=\x20\x27closed\x27)\x20OVER\x20(PARTITION\x20by\x20email\x20)\x20as\x20qtd_resolvidos,\x0a\x20\x20\x20\x20count(*)\x20OVER\x20(PARTITION\x20by\x20email)\x20as\x20qtd_por_usuario,\x0a\x20\x20\x20\x20--ROUND(MIN(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22closedAt\x22/1000),\x20t.\x22createdAt\x22)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20menor_tma,\x0a\x20\x20\x20\x20--ROUND(MAX(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22closedAt\x22/1000),\x20t.\x22createdAt\x22)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20maior_tma,\x0a\x20\x20\x20\x20concat(coalesce(ROUND(AVG(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22closedAt\x22/1000),\x20t.\x22createdAt\x22)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200),\x200),\x20\x27minutes\x27)::interval\x20tma,\x0a\x20\x20\x20\x20--ROUND(MIN(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22startedAttendanceAt\x22/1000),\x20t.\x22createdAt\x22::timestamp)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20menor_tme,\x0a\x20\x20\x20\x20--ROUND(MAX(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22startedAttendanceAt\x22/1000),\x20t.\x22createdAt\x22::timestamp)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200)\x20maior_tme,\x0a\x20\x20\x20\x20concat(coalesce(ROUND(AVG(extract(epoch\x20from\x20AGE(to_timestamp(t.\x22startedAttendanceAt\x22/1000),\x20t.\x22createdAt\x22::timestamp)::interval)/60)\x20OVER\x20(PARTITION\x20by\x20email)::decimal,\x200),\x200),\x20\x27minutes\x27)::interval\x20tme\x0a\x20\x20\x20\x20from\x20\x22Tickets\x22\x20t\x0a\x20\x20\x20\x20left\x20join\x20\x22Users\x22\x20u\x20on\x20t.\x22userId\x22\x20=\x20\x22u\x22.\x22id\x22\x0a\x20\x20\x20\x20left\x20join\x20\x22Queues\x22\x20q\x20on\x20q.id\x20\x20=\x20t.\x22queueId\x22\x0a\x20\x20\x20\x20where\x20t.\x22tenantId\x22\x20=\x20:tenantId\x20\x20AND\x20t.\x22userId\x22\x20=\x20:userId\x0a\x20\x20\x20\x20and\x20date_trunc(\x27day\x27,\x20t.\x22createdAt\x22)\x20between\x20:startDate\x20and\x20:endDate\x0a\x20\x20\x20\x20order\x20by\x206\x20Desc\x0a',queryAdmin=o(0xce),DashTicketsPerUsersDetail=async({startDate:c,endDate:d,tenantId:e,userId:f,userProfile:g})=>{const p=o,q=o,h=await database_1['default'][p(0xd5)](g==p(0xdb)?queryAdmin:query,{'replacements':{'tenantId':e,'startDate':c,'endDate':d,'userId':f},'type':sequelize_1[p(0xd3)][q(0xcd)]});return h;};function b(c,d){const e=a();return b=function(f,g){f=f-0xcc;let h=e[f];return h;},b(c,d);}exports[m(0xde)]=DashTicketsPerUsersDetail;